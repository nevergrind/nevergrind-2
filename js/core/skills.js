var skills;
!function($, _, TweenMax, Object, undefined) {
	let skillValues = []
	let lvl = 0
	const MaxSkillLevel = 7
	const AllZeroes = [0,0,0,0,0,0,0,0]

	skills = {
		enhanceHit,
		init,
		getName,
		notReady,
		getSkillValues,
		getDefaults,
		getManaTier,
		WAR: [
			{
				name: 'Shield Bash',
				img: 'WAR-1',
				mp: level => spellValues.shieldBashMana[level],
				enhancedDamage: getSkillValues(.48, .08),
				hitBonus: getSkillValues(1, .5),
				critBonus: getSkillValues(1.5, .5),
				cooldownTime: 0,
				description: config => 'Unleash a powerful bash dealing '+ config.damageString +' physical damage on your target. If a shield is equipped there is a 50% damage bonus.',
			}, {
				name: 'Rupture',
				img: 'WAR-2',
				mp: level => spellValues.ruptureMana[level],
				enhancedDamage: getSkillValues(.45, .09),
				hitBonus: getSkillValues(5.5, .5),
				critBonus: getSkillValues(-.5, .5),
				cooldownTime: 0,
				isRanged: true,
				isPiercing: true,
				description: config => 'A vicious slash that deals '+ config.damageString +' physical damage and, on successful hits, deals '+ modifiedDamageString(config.damageString, buffs.ruptureDot.dotModifier) +' bleed damage over time for '+ ng.toMinSecs(buffs.ruptureDot.duration) +'. While the bleed is active, all physical damage receives a 5% damage bonus.',
			}, {
				name: 'Whirlwind',
				img: 'WAR-3',
				mp: level => spellValues.whirlwindMana[level],
				enhancedDamage: getSkillValues(.33, .04),
				hitBonus: getSkillValues(-4.5, .5),
				critBonus: getSkillValues(-2, .5),
				cooldownTime: 15,
				description: config => 'Swing your weapons wildly, hitting up to five targets with '+ config.damageString +' physical damage.',
			}, {
				name: 'Pummel',
				img: 'WAR-4',
				mp: level => spellValues.pummelMana[level],
				enhancedDamage: getSkillValues(.66, .09),
				hitBonus: getSkillValues(4, .5),
				critBonus: getSkillValues(2.5, .5),
				requiresFrontRow: true,
				isPiercing: true,
				cooldownTime: 30,
				description: config => 'A powerful, high-threat attack that deals '+ config.damageString +' physical damage and stuns a front-row target.',
			}, {
				name: 'Double Throw',
				img: 'WAR-5',
				mp: level => spellValues.doubleThrowMana[level],
				enhancedDamage: getSkillValues(.62, .09),
				hitBonus: getSkillValues(5.5, .5),
				critBonus: getSkillValues(4, .5),
				cooldownTime: 20,
				isRanged: true,
				staggers: true,
				description: config => 'A ranged physical attack that hits twice for '+ config.damageString +' and staggers your target. If your target is in the back row, there is an '+ ng.toPercent(config.doubleThrowBonus) +'% damage bonus.',
			}, {
				name: 'Shockwave',
				img: 'WAR-6',
				mp: level => spellValues.shockwaveMana[level],
				enhancedDamage: getSkillValues(.38, .04),
				hitBonus: getSkillValues(-1, .5),
				critBonus: getSkillValues(-7, .5),
				requiresFrontRow: true,
				staggers: true,
				cooldownTime: 25,
				description: config => 'Unleash a shockwave that deals '+ config.damageString +' physical damage and staggers all targets in the front row. If a shield is equipped there is a 20% damage bonus.',
			}, {
				name: 'Frenzy',
				img: 'WAR-7',
				mp: level => spellValues.frenzyMana[level],
				castTime: 0,
				cooldownTime: 60,
				damageType: '',
				description: config => 'Channel your wrath into a frenzy, boosting your skill haste by '+ ng.toPercent(config.skillHaste[config.rank]) +'% for '+ ng.toMinSecs(config.duration) +'.',
			}, {
				name: 'Jump Strike',
				img: 'WAR-8',
				mp: level => spellValues.jumpStrikeMana[level],
				enhancedDamage: getSkillValues(.87, .09),
				hitBonus: getSkillValues(2.5, .5),
				critBonus: getSkillValues(2.5, .5),
				cooldownTime: 24,
				isPiercing: true,
				description: config => 'Leaping strike that makes you completely invincible while in the air and deals '+ config.damageString +' physical damage when you land.',
			}, {
				name: 'Primal Stomp',
				img: 'WAR-9',
				sp: level => spellValues.primalStompMana[level],
				enhancedDamage: getSkillValues(.26, .03),
				hitBonus: getSkillValues(1, .5),
				critBonus: getSkillValues(-5, .5),
				cooldownTime: 16,
				isRanged: true,
				staggers: true,
				description: config => 'Unleash a mighty stomp that staggers and deals '+ config.damageString +' physical damage to all targets.',
			}, {
				name: 'Bulwark',
				img: 'WAR-10',
				sp: level => spellValues.bulwarkMana[level],
				enhancedDamage: AllZeroes,
				castTime: 0,
				damageType: '',
				cooldownTime: 60,
				description: config => 'Protect yourself with a magical bulwark that reduces all damage by '+ config.mitigation[config.rank] +' for '+ ng.toMinSecs(config.duration) +'.',
			}, {
				name: 'Intrepid Shout',
				img: 'WAR-11',
				sp: level => spellValues.intrepidShoutMana[level],
				enhancedDamage: AllZeroes,
				cooldownTime: 0,
				description: config => 'Boost all allies armor and fear resistance for '+ ng.toMinSecs(buffs.intrepidShout.duration) +'.',
			}, {
				name: 'Furious Cleave',
				img: 'WAR-12',
				sp: level => spellValues.furiousCleaveMana[level],
				enhancedDamage: getSkillValues(.65, .06),
				hitBonus: getSkillValues(4, .5),
				critBonus: getSkillValues(4, .5),
				cooldownTime: 16,
				description: config => 'A mighty cleaving strike that hits three targets for '+ config.damageString +' physical damage and stuns them '+ ng.toMinSecs(config.stunDuration) +'.',
			},
		],
		CRU: [
			{
				name: 'Zealous Slam',
				img: 'CRU-1',
				mp: level => spellValues.zealousSlamMana[level],
				enhancedDamage: getSkillValues(.56, .08),
				hitBonus: getSkillValues(4, .5),
				critBonus: getSkillValues(-1, .5),
				cooldownTime: 30,
				isRanged: true,
				description: config => 'Unleash a powerful bash dealing '+ config.damageString +' physical damage on your target with a '+ ng.toPercent(buffs.zealousSlam.staggerRate) +'% chance to stagger your target.',
			}, {
				name: 'Rebuke',
				img: 'CRU-2',
				mp: level => spellValues.rebukeMana[level],
				enhancedDamage: getSkillValues(.45, .06),
				hitBonus: getSkillValues(1, .5),
				critBonus: getSkillValues(1.5, .5),
				cooldownTime: 15,
				staggers: true,
				description: config => 'Rebuke up to three targets, staggering them and dealing '+ config.damageString +' physical damage.',
			}, {
				name: 'Vengeance',
				img: 'CRU-3',
				mp: level => spellValues.vengeanceMana[level],
				enhancedDamage: getSkillValues(.9, .09),
				hitBonus: getSkillValues(5.5, .5),
				critBonus: getSkillValues(3, .5),
				requiresFrontRow: true,
				cooldownTime: 8,
				description: config => 'Strike your target dealing '+ config.damageString +' physical damage. You have a 100% chance to riposte the next physical attack.',
			}, {
				name: 'Consecrate',
				img: 'CRU-4',
				mp: level => spellValues.consecrateMana[level],
				enhancedDamage: getSkillValues(.66, .09),
				hitBonus: getSkillValues(4, .5),
				critBonus: getSkillValues(1, .5),
				cooldownTime: 10,
				description: config => 'Strike your target dealing '+ config.damageString +' physical damage and blast up to four nearby targets dealing '+ modifiedDamageString(config.damageString, .5) +'  arcane damage. Buffs yourself with +1 stack of Consecrate up to five stacks. Consecrate buffs all resists while active.',
			}, {
				name: 'Seal of Damnation',
				img: 'CRU-5',
				mp: level => spellValues.sealOfDamnationMana[level],
				spellDamage: level => spellValues.divineJudgment[level] + (my.level),
				spellVariance: .88,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2.5,
				cooldownTime: 8,
				description: config => 'Blast your target with '+ config.damageString +' arcane damage. Marks your target with a seal that reduces its hit chance by '+ ng.toPercent(buffs.sealOfDamnation.reduceHitRate) +'% and damage by '+ ng.toPercent(buffs.sealOfDamnation.reduceDamage) +'% for '+ ng.toMinSecs(buffs.sealOfDamnation.duration) +'.',
			}, {
				name: 'Holy Wrath',
				img: 'CRU-6',
				mp: level => spellValues.holyWrathMana[level],
				spellDamage: level => spellValues.holyWrath[level] + (my.level),
				spellVariance: .9,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2.5,
				cooldownTime: 30,
				description: config => 'Strike your target dealing '+ config.damageString +' arcane damage and stun them for '+ ng.toMinSecs(buffs.holyWrath.stunDuration) +'.',
			}, {
				name: 'Divine Judgment',
				img: 'CRU-7',
				mp: level => spellValues.divineJudgmentMana[level],
				spellDamage: level => spellValues.divineJudgment[level] + (my.level),
				spellVariance: .93,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2.5,
				cooldownTime: 5,
				isBlighted: true,
				description: config => 'Strikes your target dealing '+ config.damageString +' arcane damage. Deals +50% bonus damage against undead or demons.',
			}, {
				name: 'Blessed Hammer',
				img: 'CRU-8',
				mp: level => spellValues.blessedHammerMana[level],
				spellDamage: level => spellValues.blessedHammer[level] + (my.level),
				spellVariance: .85,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 7,
				isBlighted: true,
				description: config => 'Throw a magical hammer that deals '+ config.damageString +' arcane damage in a staggered circular pattern. Deals +50% bonus damage against undead or demons.',
			}, {
				name: 'Seal of Sanctuary',
				img: 'CRU-9',
				sp: level => spellValues.sealOfSanctuaryMana[level],
				spellDamage: level => spellValues.sealOfSanctuary[level],
				spellVariance: 1,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2,
				cooldownTime: 60,
				isBuff: true,
				description: config => 'Protect yourself from all damage for '+ ng.toMinSecs(config.duration) +', but your physical damage is reduced by '+ ng.toPercent(buffs.sealOfSanctuary.reducedDamage[config.rank]) +'%.',
			}, {
				name: 'Divine Grace',
				img: 'CRU-10',
				sp: level => spellValues.divineGraceMana[level],
				spellDamage: level => spellValues.divineGrace[level] + (my.level * .5),
				spellVariance: .875,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Restore '+ config.damageString +' of your target\'s health.',
			}, {
				name: 'Benevolence',
				img: 'CRU-11',
				sp: level => spellValues.benevolenceMana[level],
				spellDamage: level => spellValues.benevolence[level] + (my.level * .5),
				spellVariance: .85,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2.5,
				cooldownTime: 60,
				description: config => 'Restore '+ config.damageString +' health to all allies.',
			}, {
				name: 'Jubilee',
				img: 'CRU-12',
				sp: level => spellValues.jubileeMana[level],
				spellDamage: level => spellValues.jubilee[level] + (my.level * .5),
				spellVariance: .85,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 30,
				description: config => 'Blast all targets with '+ config.damageString +' arcane damage. All allies\' threat is reduced.',
			},
		],
		SHD: [
			{
				name: 'Shadow Break',
				img: 'SHD-1',
				mp: level => spellValues.shadowBreakMana[level],
				enhancedDamage: getSkillValues(.57, .09),
				hitBonus: getSkillValues(-.5, .5),
				critBonus: getSkillValues(2.5, .5),
				cooldownTime: 0,
				description: config => 'Unleash a powerful bash dealing '+ config.damageString +' physical damage on your target. Each hit reduces target\'s armor. If a shield is equipped there is a 50% damage bonus.',
			}, {
				name: 'Death Strike',
				img: 'SHD-2',
				mp: level => spellValues.deathStrikeMana[level],
				enhancedDamage: getSkillValues(.73, .1),
				hitBonus: getSkillValues(1, .5),
				critBonus: getSkillValues(1.5, .5),
				cooldownTime: 12,
				description: config => 'Single-target strike that deals '+ config.damageString +' physical damage and leaches '+ ng.toPercent(buffs.deathStrikeHeal.leechRatio) +'% of damage as health.',
			}, {
				name: 'Crescent Cleave',
				img: 'SHD-3',
				mp: level => spellValues.crescentCleaveMana[level],
				enhancedDamage: getSkillValues(.7, .06),
				hitBonus: getSkillValues(-4, .5),
				critBonus: getSkillValues(2.5, .5),
				cooldownTime: 9,
				description: config => 'Cleave up to three targets dealing '+ config.damageString +' physical damage.',
			}, {
				name: 'Doom Thrust',
				img: 'SHD-4',
				mp: level => spellValues.doomThrustMana[level],
				enhancedDamage: getSkillValues(.76, .09),
				hitBonus: getSkillValues(4, .5),
				critBonus: getSkillValues(-2, .5),
				cooldownTime: 10,
				isRanged: true,
				isPiercing: true,
				description: config => 'A long-range thrust that deals '+ config.damageString +' physical damage and pierces enemy defenses. On successful hits, deals '+ modifiedDamageString(config.damageString, buffs.doomThrustDot.dotModifier) +' bleed damage over time for '+ ng.toMinSecs(buffs.doomThrustDot.duration) +'.',
			}, {
				name: 'Astral Blade',
				img: 'SHD-5',
				mp: level => spellValues.astralBladeMana[level],
				spellDamage: level => spellValues.astralBlade[level] + (my.level * .2),
				spellVariance: .8,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 20,
				description: config => 'Summon astral blades that repeatedly strike up to five targets dealing '+ config.damageString +' arcane damage.',
			}, {
				name: 'Ravaging Plague',
				img: 'SHD-6',
				mp: level => spellValues.ravagingPlagueMana[level],
				spellDamage: level => spellValues.ravagingPlague[level] + (my.level),
				spellVariance: .93,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Blast your target with a plague that deals '+ config.damageString +' poison damage and an additional '+ modifiedDamageString(config.damageString, config.dotModifier) +' poison damage over time for '+ ng.toMinSecs(buffs.ravagingPlague.duration) +'.',
			}, {
				name: 'Decaying Doom',
				img: 'SHD-7',
				mp: level => spellValues.decayingDoomMana[level],
				spellDamage: level => spellValues.decayingDoom[level] + (my.level),
				spellVariance: .96,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Curse your target with decaying doom that strikes for '+ config.damageString +' arcane damage and deals an additional '+ modifiedDamageString(config.damageString, config.dotModifier) +' arcane damage over time for '+ ng.toMinSecs(buffs.decayingDoom.duration) +'. Debuffs target\'s armor by '+ ng.toPercent(config.debuffArmor) +'% while active.',
			}, {
				name: 'Blood Terror',
				img: 'SHD-8',
				sp: level => spellValues.bloodTerrorMana[level],
				spellDamage: level => spellValues.bloodTerror[level] + (my.level),
				spellVariance: .9,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.BLOOD,
				castTime: 3.5,
				cooldownTime: 30,
				description: config => 'Deals '+ config.damageString +' blood damage over time for '+ ng.toMinSecs(buffs.bloodTerror.duration) +'. Fears your target while active.',
			}, {
				name: 'Life Tap',
				img: 'SHD-9',
				sp: level => spellValues.lifeTapMana[level],
				spellDamage: level => spellValues.lifeTap[level] + (my.level),
				spellVariance: .95,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 30,
				cannotResist: true,
				description: config => 'Strike your target with '+ config.damageString +' arcane damage. Drain all damage to yourself as health.',
			}, {
				name: 'Vampiric Feast',
				img: 'SHD-10',
				sp: level => spellValues.vampiricFeastMana[level],
				spellDamage: level => spellValues.vampiricFeast[level] + (my.level * .2),
				spellVariance: .88,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2.5,
				cooldownTime: 30,
				cannotResist: true,
				description: config => 'Feast on your enemies by striking all targets for '+ config.damageString +' arcane damage that drains the damage to your health.',
			}, {
				name: 'Sanguine Harvest',
				img: 'SHD-11',
				sp: level => spellValues.sanguineHarvestMana[level],
				spellDamage: level => spellValues.sanguineHarvest[level] + (my.level),
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4.5,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Buffs your health on kill and gives a '+ ng.toPercent(buffs.sanguineHarvest.procRate) +'% chance for all melee attacks to proc an unresistable life drain spell dealing '+ config.lifeTap[config.rank] +' arcane damage.',
			}, {
				name: 'Mark of Remphan',
				img: 'SHD-12',
				mp: level => spellValues.markOfRemphanMana[level],
				spellDamage: level => spellValues.markOfRemphan[level] + (my.level),
				spellVariance: .9,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 2.5,
				cooldownTime: 0,
				description: config => 'Debuff your target with an unholy curse that deals '+ config.damageString +' fire direct damage. While active buffs hit and crit chance for all attacks on your target.',
			}
		],
		RNG: [
			{
				name: 'Cross Slash',
				img: 'RNG-1',
				mp: level => spellValues.crossSlashMana[level],
				enhancedDamage: getSkillValues(.55, .1),
				hitBonus: getSkillValues(2, .5),
				critBonus: getSkillValues(1, .5),
				requiresFrontRow: true,
				cooldownTime: 0,
				description: config => 'Melee up to three front-row targets with a horizontal slice dealing '+ config.damageString +'  physical damage.',
			}, {
				name: 'Explosive Shot',
				img: 'RNG-2',
				mp: level => spellValues.explosiveShotMana[level],
				enhancedDamage: getSkillValues(.8, .1),
				hitBonus: getSkillValues(-5, .5),
				critBonus: getSkillValues(1.5, .5),
				cooldownTime: 20,
				isRanged: true,
				isRangedDamage: true,
				description: config => 'Launch an explosive fire arrow that bursts into flames hitting three targets for '+ config.damageString +' fire damage.',
			}, {
				name: 'Trueshot Strike',
				img: 'RNG-3',
				mp: level => spellValues.trueshotStrikeMana[level],
				enhancedDamage: getSkillValues(1.6, .15),
				hitBonus: getSkillValues(7, .5),
				critBonus: getSkillValues(6.5, .5),
				cooldownTime: 30,
				isPiercing: true,
				isRanged: true,
				isRangedDamage: true,
				description: config => 'Fire an accurate, powerful arrow at your target dealing '+ config.damageString +' physical damage.',
			}, {
				name: 'Spread Shot',
				img: 'RNG-4',
				mp: level => spellValues.spreadShotMana[level],
				enhancedDamage: getSkillValues(.33, .06),
				hitBonus: getSkillValues(-7, .5),
				critBonus: getSkillValues(-3.5, .5),
				cooldownTime: 24,
				isRanged: true,
				isRangedDamage: true,
				description: config => 'Launch up to five arrows at different targets dealing '+ config.damageString +' physical damage. Targeting prioritizes the front row.',
			}, {
				name: 'Blade Storm',
				img: 'RNG-5',
				mp: level => spellValues.bladeStormMana[level],
				enhancedDamage: getSkillValues(.36, .05),
				hitBonus: getSkillValues(1.5, .5),
				critBonus: getSkillValues(1.5, .5),
				cooldownTime: 16,
				description: config => 'Unleash a rapid flurry of melee attacks that deal '+ config.damageString +' physical damage five times.',
			}, {
				name: 'Suppressing Volley',
				img: 'RNG-6',
				mp: level => spellValues.suppressingVolleyMana[level],
				enhancedDamage: getSkillValues(.45, .05),
				hitBonus: getSkillValues(-91.5, .5),
				critBonus: getSkillValues(-1.5, .5),
				cooldownTime: 12,
				isRanged: true,
				isRangedDamage: true,
				description: config => 'Launch sedative arrows that hit up to three targets dealing '+ config.damageString +' physical damage and reduces your threat. On successful hit, debuffs each target\'s hit chance, up to five stacks, for 21 seconds.',
			}, {
				name: 'Burning Embers',
				img: 'RNG-7',
				mp: level => spellValues.burningEmbersMana[level],
				spellDamage: level => spellValues.burningEmbers[level] + (my.level * 2),
				spellVariance: .8,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 2.5,
				cooldownTime: 0,
				description: config => 'Flames burst dealing '+ config.damageString +' fire damage on your target and burns for extra damage over time. Reduces your target\'s armor by 15% while active.',
			}, {
				name: 'Shock Nova',
				img: 'RNG-8',
				mp: level => spellValues.shockNovaMana[level],
				spellDamage: level => spellValues.shockNova[level] + my.level,
				spellVariance: .7,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 2,
				cooldownTime: 12,
				staggers: true,
				description: config => 'A burst of static energy zaps all targets with '+ config.damageString +' lightning damage and staggers all targets.',
			}, {
				name: 'Faerie Flame',
				img: 'RNG-9',
				sp: level => spellValues.faerieFlameMana[level],
				spellDamage: level => spellValues.faerieFlame[level] + (my.level * 3),
				spellVariance: .85,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Blast your target with '+ config.damageString +' fire damage. The fire faeries illuminate your targets\' silhouette, increasing all allies\' hit chance by '+ ng.toPercent(buffs.faerieFlame.buffHitBonus) +'% while active.',
			}, {
				name: 'Fungal Growth',
				img: 'RNG-10',
				sp: level => spellValues.fungalGrowthMana[level],
				spellDamage: level => spellValues.fungalGrowth[level] + (my.level),
				spellVariance: .95,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2,
				cooldownTime: 0,
				description: config => 'Fungal spores restore '+ config.damageString +' of your target\'s health over time.',
			}, {
				name: 'Shimmering Orb',
				img: 'RNG-11',
				sp: level => spellValues.shimmeringOrbMana[level],
				spellDamage: level => spellValues.shimmeringOrb[level],
				spellVariance: 1,
				spellType: PROP.CONJURATION,
				castTime: 4,
				cooldownTime: 5,
				description: config => 'Buff your target with a shimmering orb that mitigates damage on your target until the shield is depleted.',
			}, {
				name: 'Spirit of the Hunter',
				img: 'RNG-12',
				sp: level => spellValues.spiritOfTheHunterMana[level],
				spellDamage: level => spellValues.spiritOfTheHunter[level],
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				castTime: 3.5,
				cooldownTime: 15,
				description: config => 'Buff your target\'s attack power and attack haste.',
			},
		],
		MNK: [
			{
				name: 'Tiger Strike',
				img: 'MNK-1',
				mp: level => spellValues.tigerStrikeMana[level],
				enhancedDamage: getSkillValues(.76, .09),
				hitBonus: getSkillValues(.5, .5),
				critBonus: getSkillValues(-4, .5),
				cooldownTime: 0,
				description: config => 'Strike your target with '+ config.damageString + ' physical damage. On successful hits, deal '+ modifiedDamageString(config.damageString, buffs.tigerStrikeDot.dotModifier) +' bleed damage over time for ' + ng.toMinSecs(buffs.tigerStrikeDot.duration) +'.',
			}, {
				name: 'Hyper Strike',
				img: 'MNK-2',
				mp: level => spellValues.hyperStrikeMana[level],
				enhancedDamage: getSkillValues(.55, .09),
				hitBonus: getSkillValues(3, .5),
				critBonus: getSkillValues(-8, .5),
				cooldownTime: 7,
				description: config => 'Strike your target for '+ config.damageString +' physical damage. On successful hits, buffs your skill haste and stacks up to five times for greater effect.',
			}, {
				name: 'Mime Strike',
				img: 'MNK-3',
				mp: level => spellValues.mimeStrikeMana[level],
				enhancedDamage: getSkillValues(.6, .07),
				hitBonus: getSkillValues(6, .5),
				critBonus: getSkillValues(-2, .5),
				cooldownTime: 20,
				description: config => 'Strike your target for '+ config.damageString +' physical damage. Your next attack will strike twice.',
			}, {
				name: 'Crane Kick',
				img: 'MNK-4',
				mp: level => spellValues.craneKickMana[level],
				enhancedDamage: getSkillValues(.93, .09),
				hitBonus: getSkillValues(-4, .5),
				critBonus: getSkillValues(3.5, .5),
				cooldownTime: 30,
				stuns: 3,
				description: config => 'Strikes your target with a crane kick dealing '+ config.damageString +'. Stuns your target for ' + ng.toMinSecs(buffs.craneKick.stunDuration),
			}, {
				name: 'Chakra Blast',
				img: 'MNK-5',
				mp: level => spellValues.chakraBlastMana[level],
				enhancedDamage: getSkillValues(.36, .04),
				hitBonus: getSkillValues(-5.5, .5),
				critBonus: getSkillValues(6.5, .5),
				cooldownTime: 21,
				damageType: DAMAGE_TYPE.ARCANE,
				description: config => 'Focus and explode with arcane energy hitting all targets for '+ config.damageString +' arcane damage.',
			}, {
				name: 'Hadoken',
				img: 'MNK-6',
				mp: level => spellValues.hadokenMana[level],
				enhancedDamage: getSkillValues(.88, .09),
				critBonus: getSkillValues(2, .5),
				cooldownTime: 12,
				isRanged: true,
				damageType: DAMAGE_TYPE.FIRE,
				isMelee: true,
				description: config => 'Shoot a fireball at your target that hits for '+ config.damageString +' fire damage.',
			}, {
				name: 'Hurricane Kicks',
				img: 'MNK-7',
				mp: level => spellValues.hurricaneKicksMana[level],
				enhancedDamage: getSkillValues(.66, .09),
				hitBonus: getSkillValues(1, .5),
				critBonus: getSkillValues(-2, .5),
				cooldownTime: 24,
				description: config => 'Kick up to three targets three times inflicting '+ config.damageString +' physical damage at intervals.',
			}, {
				name: 'Dragon Punch',
				img: 'MNK-8',
				mp: level => spellValues.dragonPunchMana[level],
				requiresFrontRow: true,
				enhancedDamage: getSkillValues(.8, .1),
				critBonus: getSkillValues(3.5, .5),
				cooldownTime: 16,
				damageType: DAMAGE_TYPE.FIRE,
				staggers: true,
				isMelee: true,
				description: config => 'Unleash a flaming uppercut on a front-row target hitting twice for '+ modifiedDamageString(config.damageString, config.damageModifier) +' and once for '+ config.damageString +' fire damage.',
			}, {
				name: 'Viper Strike',
				img: 'MNK-9',
				sp: level => spellValues.viperStrikeMana[level],
				enhancedDamage: getSkillValues(.42, .08),
				hitBonus: getSkillValues(9, .5),
				critBonus: getSkillValues(-6, .5),
				cooldownTime: 9,
				description: config => 'Strike for '+ config.damageString +' physical damage. On successful hits, leeches health and stacks up to five times for greater effect.',
			}, {
				name: 'Palm Strike',
				img: 'MNK-10',
				sp: level => spellValues.palmStrikeMana[level],
				enhancedDamage: getSkillValues(.95, .09),
				hitBonus: getSkillValues(2, .5),
				critBonus: getSkillValues(4, .5),
				cooldownTime: 30,
				staggers: true,
				description: config => 'Delivers a powerful palm strike for '+ config.damageString +' physical damage. Staggers and paralyzes your target for ' + ng.toMinSecs(buffs.palmStrike.paralyzeDuration) + '.',
			}, {
				name: 'Mending Aura',
				img: 'MNK-11',
				sp: level => spellValues.mendingAuraMana[level],
				spellDamage: level => spellValues.mendingAura[level] + (my.level * .5),
				spellVariance: .95,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				enhancedDamage: getSkillValues(.5, .1),
				hitBonus: AllZeroes,
				critBonus: AllZeroes,
				cooldownTime: 35,
				description: config => 'Summon your spiritual energy to mend your wounds over ' + ng.toMinSecs(buffs.mendingAura.duration) + '. Reduces your threat to all mobs and reduces all physical damage to you while active.',
			}, {
				name: 'Spirit Barrier',
				img: 'MNK-12',
				sp: level => spellValues.spiritBarrierMana[level],
				cooldownTime: 20,
				description: config => 'Buffs your target with a spiritual barrier. Enhances the power of all heals and boosts all resists for '+ ng.toMinSecs(buffs.spiritBarrier.duration) +'.',
			},
		],
		ROG: [
			{
				name: 'Shadow Strike',
				img: 'ROG-1',
				mp: level => spellValues.shadowStrikeMana[level],
				enhancedDamage: getSkillValues(.73, .09),
				hitBonus: getSkillValues(5.5, .5),
				critBonus: getSkillValues(-2, .5),
				description: config => 'Strike your target dealing '+ config.damageString +' physical damage with relatively low threat.',
			}, {
				name: 'Sonic Strike',
				img: 'ROG-2',
				mp: level => spellValues.sonicStrikeMana[level],
				enhancedDamage: getSkillValues(.88, .09),
				hitBonus: getSkillValues(4, .5),
				critBonus: getSkillValues(7.5, .5),
				cooldownTime: 15,
				staggers: true,
				description: config => 'Strike for '+ config.damageString +' physical damage on your target. On successful hits, a nova deals '+ modifiedDamageString(config.damageString, (buffs.sonicStrike.novaDamage)) +' arcane damage and staggers up to three targets.',
			}, {
				name: 'Faded Strike',
				img: 'ROG-3',
				mp: level => spellValues.fadedStrikeMana[level],
				enhancedDamage: getSkillValues(.62, .08),
				hitBonus: getSkillValues(7, .5),
				critBonus: getSkillValues(-1, .5),
				cooldownTime: 10,
				description: config => 'Deal '+ config.damageString +' physical damage, reduce your threat, and chill your target for '+ ng.toMinSecs(buffs.fadedStrike.chillDuration) +'. On successful hits, gives +1 to Faded Form which buffs your dodge and all resists up to five stacks.',
			}, {
				name: 'Rising Furor',
				img: 'ROG-4',
				mp: level => spellValues.risingFurorMana[level],
				enhancedDamage: getSkillValues(.7, .09),
				hitBonus: getSkillValues(4.5, .5),
				critBonus: getSkillValues(1, .5),
				cooldownTime: 8,
				description: config => 'Strike your target and deal '+ config.damageString +' physical damage. On successful hits, earn +1 stack to Furor which buffs  attack haste up to five stacks.',
			}, {
				name: 'Lacerate',
				img: 'ROG-5',
				mp: level => spellValues.lacerateMana[level],
				enhancedDamage: getSkillValues(.5, .09),
				hitBonus: getSkillValues(5.5, .5),
				critBonus: getSkillValues(-4.5, .5),
				cooldownTime: 7,
				description: config => 'Strike your target dealing '+ config.damageString +' physical damage. On successful hits, your target will take '+ modifiedDamageString(config.damageString, buffs.lacerateDot.dotModifier) +' bleed damage over time for '+ ng.toMinSecs(buffs.lacerate.duration) +'.',
			}, {
				name: 'Backstab',
				img: 'ROG-6',
				mp: level => spellValues.backstabMana[level],
				enhancedDamage: getSkillValues(1.62, .12),
				hitBonus: getSkillValues(-4.5, .5),
				critBonus: getSkillValues(1.5, .5),
				cooldownTime: 16,
				isRanged: true,
				isPiercing: true,
				description: config => 'Strike a single target from behind for '+ config.damageString +' physical damage. Causes high threat, but pierces enemy defenses and hits back-row targets for full damage.',
			}, {
				name: 'Widow Strike',
				img: 'ROG-7',
				mp: level => spellValues.widowStrikeMana[level],
				enhancedDamage: getSkillValues(.62, .09),
				hitBonus: getSkillValues(3, .5),
				critBonus: getSkillValues(-6, .5),
				cooldownTime: 7,
				description: config => 'Strike your target dealing '+ config.damageString +' physical damage. On successful hits, apply Widow Venom to your target dealing '+ modifiedDamageString(config.damageString, buffs.widowStrikeDot.dotModifier) +' poison damage over '+ ng.toMinSecs(buffs.widowStrikeDot.duration) +'.',
			}, {
				name: 'Dazzle Thrust',
				img: 'ROG-8',
				mp: level => spellValues.dazzleThrustMana[level],
				enhancedDamage: getSkillValues(.83, .11),
				hitBonus: getSkillValues(4, .5),
				critBonus: getSkillValues(5.5, .5),
				cooldownTime: 25,
				description: config => 'Strike your target dealing '+ config.damageString +' physical damage. Dazzles your target with a powerful stun for '+ ng.toMinSecs(buffs.dazzleThrust.stunDuration) +'.',
			}, {
				name: 'Mirage Strike',
				img: 'ROG-9',
				sp: level => spellValues.mirageStrikeMana[level],
				enhancedDamage: getSkillValues(.93, .09),
				hitBonus: getSkillValues(2.5, .5),
				critBonus: getSkillValues(1, .5),
				cooldownTime: 5,
				description: config => 'Deal '+ config.damageString +' physical damage to your target. On successful hits, adds +1 to Mirage which can absorb one physical attack. You can stack up to five mirages at a time.',
			}, {
				name: 'Flash Strike',
				img: 'ROG-10',
				sp: level => spellValues.flashStrikeMana[level],
				enhancedDamage: getSkillValues(.93, .09),
				hitBonus: getSkillValues(9, .5),
				critBonus: getSkillValues(3, .5),
				cooldownTime: 10,
				isRanged: true,
				isPiercing: true,
				damageType: DAMAGE_TYPE.FIRE,
				description: config => 'Apply explosive powder to your weapon to strike your target for '+ config.damageString +' fire damage. Disorients your target, reducing your threat and its dodge chance for '+ ng.toMinSecs(buffs.flashStrike.duration) +'.',
			}, {
				name: 'Talisman of Treachery',
				img: 'ROG-11',
				sp: level => spellValues.talismanOfTreacheryMana[level],
				enhancedDamage: getSkillValues(.5, .09),
				hitBonus: getSkillValues(1, .5),
				critBonus: getSkillValues(3, .5),
				cooldownTime: 50,
				description: config => 'Buff your target\'s agility, poison damage, and attack rating for '+ ng.toMinSecs(buffs.talismanOfTreachery.duration) +'.',
			}, {
				name: 'Prowl',
				img: 'ROG-12',
				sp: level => spellValues.prowlMana[level],
				enhancedDamage: getSkillValues(.5, .09),
				hitBonus: getSkillValues(1, .5),
				critBonus: getSkillValues(3, .5),
				cooldownTime: 60,
				description: config => 'Prowl into the shadows for '+ ng.toMinSecs(buffs.prowl.duration) +'. Slows down your attack speed, but buffs your physical damage resistance by '+ ng.toPercent(buffs.prowl.resistPhysical) +'%, your fear resistance by '+ buffs.prowl.resistFear[config.rank] +', and your physical damage by '+ ng.toPercent(buffs.prowl.bonusDamage[config.rank]) +'%.',
			},
		],
		DRU: [
			{
				name: 'Starfire',
				img: 'DRU-1',
				mp: level => spellValues.starfireMana[level],
				spellDamage: level => spellValues.starfire[level] + (my.level),
				spellVariance: .88,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Blast your target with '+ config.damageString +' fire damage.',
			}, {
				name: 'Fissure',
				img: 'DRU-2',
				mp: level => spellValues.fissureMana[level],
				spellDamage: level => spellValues.fissure[level] + (my.level * .5),
				spellVariance: .75,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 4,
				cooldownTime: 12,
				description: config => 'Lava erupts from the ground and hits up to three targets five times dealing '+ config.damageString +' fire damage at intervals over 8 seconds.',
			}, {
				name: 'Lightning Blast',
				img: 'DRU-3',
				mp: level => spellValues.lightningBlastMana[level],
				spellDamage: level => spellValues.lightningBlast[level] + (my.level),
				spellVariance: .875,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 4,
				cooldownTime: 5,
				description: config => 'Hits up to three targets dealing '+ config.damageString +' lightning damage.',
			}, {
				name: 'Blizzard',
				img: 'DRU-4',
				mp: level => spellValues.blizzardMana[level],
				spellDamage: level => spellValues.blizzard[level] + (my.level * .5),
				spellVariance: .6,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 5,
				cooldownTime: 30,
				description: config => 'An ice storm blasts up to three targets five times dealing '+ config.damageString +' ice damage at intervals over 8 seconds.',
			}, {
				name: 'Toxic Spores',
				img: 'DRU-5',
				mp: level => spellValues.toxicSporesMana[level],
				spellDamage: level => spellValues.toxicSpores[level] + (my.level),
				spellVariance: .94,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Blast your target with toxic sports that do '+ config.damageString +' poison damage over '+ ng.toMinSecs(buffs.toxicSpores.duration) +'.',
			}, {
				name: 'Molten Boulder',
				img: 'DRU-6',
				mp: level => spellValues.moltenBoulderMana[level],
				spellDamage: level => spellValues.moltenBoulder[level] + (my.level),
				spellVariance: .9,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.FIRE,
				requiresFrontRow: true,
				castTime: 4.5,
				cooldownTime: 20,
				description: config => 'Summon a molten boulder that crushes through the front row to your target. Hits your target for '+ config.damageString +' fire damage and hits collateral targets for '+ modifiedDamageString(config.damageString, config.strikeModifier) +' fire damage. Smolders for an additional '+ modifiedDamageString(config.damageString, buffs.moltenBoulderStrike.dotModifier) +' fire damage over time for '+ ng.toMinSecs(buffs.moltenBoulder.duration) +'.',
			}, {
				name: 'Barbed Thicket',
				img: 'DRU-7',
				mp: level => spellValues.barbedThicketMana[level],
				spellDamage: level => spellValues.barbedThicket[level] + (my.level),
				spellVariance: .92,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2,
				cooldownTime: 15,
				staggers: true,
				description: config => 'Hits up to three targets for with '+ config.damageString +' arcane damage. Reduces threat and staggers each target.',
			}, {
				name: 'Tornado',
				img: 'DRU-8',
				mp: level => spellValues.tornadoMana[level],
				spellDamage: level => spellValues.tornado[level] + (my.level * .5),
				spellVariance: .88,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 9,
				description: config => 'Hits a random target twice dealing '+ config.damageString +' arcane and cold damage. Chills your target for '+ ng.toMinSecs(buffs.tornado.chillDuration) +'.',
			}, {
				name: 'Nature\'s Touch',
				img: 'DRU-9',
				sp: level => spellValues.naturesTouchMana[level],
				spellDamage: level => spellValues.naturesTouch[level] + (my.level),
				spellVariance: .87,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2.5,
				cooldownTime: 0,
				description: config => 'Restore '+ config.damageString +' of your target\'s health and restore an additional '+ modifiedDamageString(config.damageString, buffs.naturesTouchHot.tickPercent) +' health over '+ ng.toMinSecs(buffs.naturesTouchHot.duration) +'.',
			}, {
				name: 'Moss Breath',
				img: 'DRU-10',
				sp: level => spellValues.mossBreathMana[level],
				spellDamage: level => spellValues.mossBreath[level] + (my.level),
				spellVariance: .96,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Restore '+ config.damageString +' health on your target over time for '+ ng.toMinSecs(buffs.mossBreath.duration) +'.',
			}, {
				name: 'Synthesize',
				img: 'DRU-11',
				sp: level => spellValues.synthesizeMana[level],
				spellDamage: level => spellValues.synthesize[level] + (my.level),
				spellVariance: .875,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 5,
				cooldownTime: 0,
				description: config => 'Buff your target\'s health regeneration healing '+ config.damageString +' health over ' + ng.toMinSecs(buffs.synthesize.duration) + '.',
			}, {
				name: 'Branch Spirit',
				img: 'DRU-12',
				sp: level => spellValues.branchSpiritMana[level],
				spellDamage: level => spellValues.branchSpirit[level] + (my.level),
				spellVariance: .875,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Infuse yourself with nature\'s wrath. Buffs your physical damage by '+ ng.toPercent(config.bonusDamage) +'%. Buffs your health regeneration by '+ config.hpRegen[config.rank] +', attack rating by '+ ng.toPercent(config.attackRatio) +'%, and armor by '+ config.armor[config.rank] +' for '+ ng.toMinSecs(config.duration) +'.',
			},
		],
		CLR: [
			{
				name: 'Smite',
				img: 'CLR-1',
				mp: level => spellValues.smiteMana[level],
				spellDamage: level => spellValues.smite[level] + (my.level * 1.5),
				spellVariance: .825,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Strike your target dealing '+ config.damageString +' arcane damage on your target.',
			}, {
				name: 'Deliverance',
				img: 'CLR-2',
				mp: level => spellValues.deliveranceMana[level],
				spellDamage: level => spellValues.deliverance[level] + (my.level * 2),
				spellVariance: .9,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 2,
				cooldownTime: 6,
				isBlighted: true,
				description: config => 'Deal '+ config.damageString +' fire damage to your target that does bonus 50% damage to demons and undead.',
			}, {
				name: 'Condemnation',
				img: 'CLR-3',
				mp: level => spellValues.condemnationMana[level],
				spellDamage: level => spellValues.condemnation[level] + (my.level * 2),
				spellVariance: .875,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 12,
				isBlighted: true,
				staggers: true,
				description: config => 'Strike three targets for '+ config.damageString +' arcane damage. Staggers each target and does bonus 50% damage to demons and undead.',
			}, {
				name: 'Sacred Revelation',
				img: 'CLR-4',
				mp: level => spellValues.sacredRevelationMana[level],
				spellDamage: level => spellValues.sacredRevelation[level] + (my.level * 1.5),
				spellVariance: .95,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 1.5,
				cooldownTime: 30,
				description: config => 'Blast three targets for '+ config.damageString +' arcane damage and stun them for '+ ng.toMinSecs(config.stunDuration) +'.',
			}, {
				name: 'Holy Sanctuary',
				img: 'CLR-5',
				mp: level => spellValues.holySanctuaryMana[level],
				spellDamage: level => spellValues.holySanctuary[level],
				spellVariance: .9,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 1.5,
				cooldownTime: 24,
				description: config => 'Blast all targets for '+ config.damageString +' arcane damage and reduce your threat.',
			}, {
				name: 'Force of Glory',
				img: 'CLR-6',
				mp: level => spellValues.forceOfGloryMana[level],
				spellDamage: level => spellValues.forceOfGlory[level] + (my.level),
				spellVariance: .9,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 1.5,
				cooldownTime: 60,
				description: config => 'Strike your target for '+ config.damageString +' arcane damage. Stuns your target for '+ ng.toMinSecs(config.stunDuration) +'.',
			}, {
				name: 'Binding Grace',
				img: 'CLR-7',
				mp: level => spellValues.bindingGraceMana[level],
				spellDamage: level => spellValues.bindingGrace[level] + (my.level * .5),
				spellVariance: .9,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4,
				cooldownTime: 8,
				description: config => 'Restore '+ config.damageString +' health to your target and yourself at the same time. If you target yourself, it only heals yourself.',
			}, {
				name: 'Guardian Angel',
				img: 'CLR-8',
				mp: level => spellValues.guardianAngelMana[level],
				spellDamage: level => spellValues.guardianAngel[level] + (my.level),
				spellVariance: .95,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 1.5,
				cooldownTime: 15,
				description: config => 'Protect your target with a holy shield that absorbs '+ config.damageString +' damage. Buffs fear resistance while active.',
			}, {
				name: 'Divine Light',
				img: 'CLR-9',
				sp: level => spellValues.divineLightMana[level],
				spellDamage: level => spellValues.divineLight[level] + (my.level * .5),
				spellVariance: .9,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Restore '+ config.damageString +' of your target\'s health with a splash of divine light.',
			}, {
				name: 'Circle of Prayer',
				img: 'CLR-10',
				sp: level => spellValues.circleOfPrayerMana[level],
				spellDamage: level => spellValues.circleOfPrayer[level] + (my.level),
				spellVariance: .9,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4,
				cooldownTime: 0,
				description: config => 'Join hands and restore '+ config.damageString +' health to all allies with a solemn prayer.',
			}, {
				name: 'Seal of Redemption',
				img: 'CLR-11',
				sp: level => spellValues.sealOfRedemptionMana[level],
				spellDamage: level => spellValues.sealOfRedemption[level] + (my.level),
				spellVariance: 1,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 5,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Buff your target\'s health and blood magic resistance.',
			}, {
				name: 'Zealous Resolve',
				img: 'CLR-12',
				sp: level => spellValues.zealousResolveMana[level],
				spellDamage: level => spellValues.zealousResolve[level] + (my.level),
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4.5,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Buff your target\'s health and armor.',
			},
		],
		SHM: [
			{
				name: 'Frost Rift',
				img: 'SHM-1',
				mp: level => spellValues.frostRiftMana[level],
				spellDamage: level => spellValues.frostRift[level] + (my.level),
				spellVariance: .85,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Strike your target for '+ config.damageString +' ice damage.',
			}, {
				name: 'Poison Nova',
				img: 'SHM-2',
				mp: level => spellValues.poisonNovaMana[level],
				spellDamage: level => spellValues.poisonNova[level] + (my.level * .5),
				spellVariance: .8,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 4,
				cooldownTime: 8,
				description: config => 'Blast all targets with a poison nova that hits for '+ config.damageString +' poison damage.',
			}, {
				name: 'Scourge',
				img: 'SHM-3',
				mp: level => spellValues.scourgeMana[level],
				spellDamage: level => spellValues.scourge[level] + (my.level * .5),
				spellVariance: .93,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.BLOOD,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Deals '+ config.damageString +' blood damage and an additional '+ modifiedDamageString(config.damageString, buffs.scourge.dotModifier) +' blood damage over time for '+ ng.toMinSecs(buffs.scourge.duration) +'.',
			}, {
				name: 'Poison Bolt',
				img: 'SHM-4',
				mp: level => spellValues.poisonBoltMana[level],
				spellDamage: level => spellValues.poisonBolt[level] + (my.level),
				spellVariance: .875,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Launch a single bolt at your target dealing '+ config.damageString +' poison damage.',
			}, {
				name: 'Vampiric Gaze',
				img: 'SHM-5',
				mp: level => spellValues.vampiricGazeMana[level],
				spellDamage: level => spellValues.vampiricGaze[level] + (my.level),
				spellVariance: .95,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 15,
				description: config => 'Deals '+ config.damageString +' arcane damage over time for '+ ng.toMinSecs(buffs.vampiricGaze.duration) +'. While active all melee attacks on the affected target will leech additional health.',
			}, {
				name: 'Glacial Shard',
				img: 'SHM-6',
				mp: level => spellValues.glacialShardMana[level],
				spellDamage: level => spellValues.glacialShard[level] + (my.level),
				spellVariance: .92,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 3,
				cooldownTime: 24,
				description: config => 'Strike up to three targets dealing '+ config.damageString +' ice damage.',
			}, {
				name: 'Affliction',
				img: 'SHM-7',
				mp: level => spellValues.afflictionMana[level],
				spellDamage: level => spellValues.affliction[level] + (my.level),
				spellVariance: .96,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 2.5,
				cooldownTime: 0,
				description: config => 'Deals '+ config.damageString +' poison damage over time for '+ ng.toMinSecs(buffs.affliction.duration) +'.',
			}, {
				name: 'Devouring Swarm',
				img: 'SHM-8',
				mp: level => spellValues.devouringSwarmMana[level],
				spellDamage: level => spellValues.devouringSwarm[level] + (my.level),
				spellVariance: .95,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 45,
				description: config => 'Deals '+ config.damageString +' arcane damage over time for '+ ng.toMinSecs(buffs.devouringSwarm.duration) +'. Each tick heals you for '+ ng.toPercent(buffs.devouringSwarmHeal.healRatio) +'% of damage dealt.',
			}, {
				name: 'Rejuvinate',
				img: 'SHM-9',
				sp: level => spellValues.rejuvinateMana[level],
				spellDamage: level => spellValues.rejuvinate[level] + (my.level),
				spellVariance: .92,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Restores '+ config.damageString +' of your target\'s health and restores an additional '+ modifiedDamageString(config.damageString, buffs.rejuvinateHot.tickPercent) +' health over '+ ng.toMinSecs(buffs.rejuvinateHot.duration) +'.',
			}, {
				name: 'Mystical Glow',
				img: 'SHM-10',
				sp: level => spellValues.mysticalGlowMana[level],
				spellDamage: level => spellValues.mysticalGlow[level] + (my.level),
				spellVariance: .92,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Restores '+ config.damageString +' of your target\'s health over time for '+ ng.toMinSecs(buffs.mysticalGlow.duration) +'. While active boosts all heals by '+ ng.toPercent(buffs.mysticalGlow.enhanceHealing) +'%',
			}, {
				name: 'Vampiric Allure',
				img: 'SHM-11',
				sp: level => spellValues.vampiricAllureMana[level],
				spellDamage: level => spellValues.vampiricAllure[level] + (my.level),
				spellVariance: .88,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4.5,
				cooldownTime: 0,
				description: config => 'Buffs your ally\'s life leech and charisma for '+ ng.toMinSecs(buffs.vampiricAllure.duration) + '.',
			}, {
				name: 'Boreal Talisman',
				img: 'SHM-12',
				sp: level => spellValues.borealTalismanMana[level],
				spellDamage: level => spellValues.borealTalisman[level] + (my.level),
				spellVariance: .88,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 4,
				cooldownTime: 0,
				description: config => 'Buff an ally\'s strength, stamina, and ice resistance for '+ ng.toMinSecs(buffs.borealTalisman.duration) +'.',
			},
		],
		BRD: [
			{
				name: 'Bellow',
				img: 'BRD-1',
				mp: level => spellValues.bellowMana[level],
				spellDamage: level => spellValues.bellow[level] + (my.level * .5),
				spellVariance: .88,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Single target burst of direct arcane energy that deals '+ config.damageString +' damage. Bellow has a 25% chance to stagger.',
			}, {
				name: 'Sonic Boom',
				img: 'BRD-2',
				mp: level => spellValues.sonicBoomMana[level],
				spellDamage: level => spellValues.sonicBoom[level] + (my.level),
				spellVariance: .85,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 16,
				description: config => 'Blasts up to three targets for '+ config.damageString +' arcane damage.',
			}, {
				name: 'Euphonic Dirge',
				img: 'BRD-3',
				mp: level => spellValues.euphonicDirgeMana[level],
				spellDamage: level => spellValues.euphonicDirge[level] + (my.level * .5),
				spellVariance: .92,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Deals '+ config.damageString +' poison damage over time on up to three targets for '+ ng.toMinSecs(buffs.euphonicDirge.duration) +'.',
			}, {
				name: 'Subverted Symphony',
				img: 'BRD-4',
				mp: level => spellValues.subvertedSymphonyMana[level],
				spellDamage: level => spellValues.subvertedSymphony[level] + (my.level * .5),
				spellVariance: .9,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Deals '+ config.damageString +' fire damage over time on up to three targets for '+ ng.toMinSecs(buffs.subvertedSymphony.duration) +'. Lowers each target\'s armor by '+ ng.toPercent(buffs.subvertedSymphony.debuffArmor) +'% while active.',
			}, {
				name: 'Crashing Chords',
				img: 'BRD-5',
				mp: level => spellValues.crashingChordsMana[level],
				spellDamage: level => spellValues.crashingChords[level] + (my.level),
				spellVariance: .8,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 3,
				cooldownTime: 30,
				description: config => 'Strike your target for '+ config.damageString +' lightning damage. Paralyzes your target for '+ ng.toMinSecs(buffs.crashingChords.paralyzeDuration) +'.',
			}, {
				name: 'Battle Hymn',
				img: 'BRD-6',
				mp: level => spellValues.battleHymnMana[level],
				spellDamage: level => spellValues.battleHymn[level],
				spellVariance: 1,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Boost the strength, dexterity, and attack haste of all allies for '+ ng.toMinSecs(buffs.battleHymn.duration) +'.',
			}, {
				name: 'Militant Cadence',
				img: 'BRD-7',
				mp: level => spellValues.militantCadenceMana[level],
				spellDamage: level => spellValues.militantCadence[level] + (my.level),
				spellVariance: 1,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Bolster all allies maximum health, mana, and spirit for '+ ng.toMinSecs(buffs.militantCadence.duration) +'.',
			}, {
				name: 'Consonant Chain',
				img: 'BRD-8',
				mp: level => spellValues.consonantChainMana[level],
				spellDamage: level => spellValues.consonantChain[level] + (my.level),
				spellVariance: .91,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Deals arcane damage over time for '+ ng.toMinSecs(buffs.consonantChain.duration) +'. Slows your target\'s attack speed by '+ ng.toPercent(config.slowPercent) +'% while active.',
			}, {
				name: 'Litany of Life',
				img: 'BRD-9',
				sp: level => spellValues.litanyOfLifeMana[level],
				spellDamage: level => spellValues.litanyOfLife[level],
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Boosts the health regeneration of all allies by '+ config.hpRegen[config.rank] +' for '+ ng.toMinSecs(buffs.litanyOfLife.duration) +'.',
			}, {
				name: 'Melody of Mana',
				img: 'BRD-10',
				sp: level => spellValues.melodyOfManaMana[level],
				spellDamage: level => spellValues.melodyOfMana[level],
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Boosts all allies\' mana regeneration by '+ config.mpRegen[config.rank] +' and casting haste by '+ ng.toPercent(config.castingHaste) +'% for '+ ng.toMinSecs(buffs.melodyOfMana.duration) +'.',
			}, {
				name: 'Righteous Rhapsody',
				img: 'BRD-11',
				sp: level => spellValues.righteousRhapsodyMana[level],
				spellDamage: level => spellValues.righteousRhapsody[level],
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Reduce all resists of all mobs by '+ ng.toPercent(config.reduceAllResists[config.rank]) +'% for '+ ng.toMinSecs(buffs.righteousRhapsody.duration) +'.',
			}, {
				name: 'Chromatic Sonata',
				img: 'BRD-12',
				sp: level => spellValues.chromaticSonataMana[level],
				spellDamage: level => spellValues.chromaticSonata[level],
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Buff all allies\' armor by '+ config.armor[config.rank] +' and all resists by '+ config.resistAll[config.rank] +' for '+ ng.toMinSecs(buffs.chromaticSonata.duration) +'.',
			},
		],
		WLK: [
			{
				name: 'Venom Bolt',
				img: 'WLK-1',
				mp: level => spellValues.venomBoltMana[level],
				spellDamage: level => spellValues.venomBolt[level] + (my.level),
				spellVariance: .89,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Launch a venom bolt at your target dealing '+ config.damageString +' poison damage.',
			}, {
				name: 'Explosive Plague',
				img: 'WLK-2',
				mp: level => spellValues.explosivePlagueMana[level],
				spellDamage: level => spellValues.explosivePlague[level] + (my.level * .5),
				spellVariance: .95,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 4,
				cooldownTime: 0,
				description: config => `Deals ${config.damageString} poison damage over time for ${ng.toMinSecs(buffs.explosivePlague.duration)}. If your target is still alive when it expires, it explodes for ${modifiedDamageString(config.damageString, buffs.explosivePlague.dotModifier)} poison damage hitting up to five targets.`,
			}, {
				name: 'Blood Fire',
				img: 'WLK-3',
				mp: level => spellValues.bloodFireMana[level],
				spellDamage: level => spellValues.bloodFire[level] + (my.level * .5),
				spellVariance: .93,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Scorch your target dealing '+ config.damageString +' fire damage and deal an additional '+ modifiedDamageString(config.damageString, config.dotModifier) +' fire damage over time for '+ ng.toMinSecs(buffs.bloodFire.duration) +'. Debuffs target\'s armor by '+ ng.toPercent(buffs.bloodFire.debuffArmor) +'%.',
			}, {
				name: 'Demonic Pact',
				img: 'WLK-4',
				mp: level => spellValues.demonicPactMana[level],
				spellDamage: level => spellValues.demonicPact[level] + (my.level * .5),
				spellVariance: .9,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.BLOOD,
				castTime: 4.5,
				cooldownTime: 15,
				description: config => 'Strike your target dealing '+ config.damageString +' blood damage and deal additional '+ modifiedDamageString(config.damageString, config.dotModifier) +' blood damage over time for '+ ng.toMinSecs(buffs.demonicPact.duration) +'. Buffs all physical damage on your target by '+ ng.toPercent(config.bonusDamage) +'%',
			}, {
				name: 'Haunting Vision',
				img: 'WLK-5',
				mp: level => spellValues.hauntingVisionMana[level],
				spellDamage: level => spellValues.hauntingVision[level] + (my.level),
				spellVariance: .85,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2.5,
				cooldownTime: 40,
				description: config => 'Strike up to three targets dealing '+ config.damageString +' arcane damage. Fears all targets for '+ ng.toMinSecs(buffs.hauntingVision.fearDuration) +'.',
			}, {
				name: 'Icing Death',
				img: 'WLK-6',
				mp: level => spellValues.icingDeathMana[level],
				spellDamage: level => spellValues.icingDeath[level] + (my.level),
				spellVariance: .8,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 4,
				cooldownTime: 15,
				description: config => 'Strikes up to three targets dealing '+ config.damageString +' ice damage that chills each target. 50% bonus vs undead.',
			}, {
				name: 'Curse of Shadows',
				img: 'WLK-7',
				mp: level => spellValues.curseOfShadowsMana[level],
				spellDamage: level => spellValues.curseOfShadows[level] + (my.level),
				spellVariance: .92,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Deal '+ config.damageString +' arcane damage over time for '+ ng.toMinSecs(buffs.curseOfShadows.duration) +'. Debuffs your target\'s blood, poison, and arcane resistance by '+ ng.toPercent(buffs.curseOfShadows.reduceBloodResist) +'% while active.',
			}, {
				name: 'Panic Strike',
				img: 'WLK-8',
				mp: level => spellValues.panicStrikeMana[level],
				spellDamage: level => spellValues.panicStrike[level] + (my.level * .5),
				spellVariance: .9,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 15,
				description: config => 'Blast your target for '+ config.damageString +' arcane damage. Fears your target for '+ ng.toMinSecs(buffs.panicStrike.fearDuration) +'.',
			}, {
				name: 'Drain Soul',
				img: 'WLK-9',
				sp: level => spellValues.drainSoulMana[level],
				spellDamage: level => spellValues.drainSoul[level] + (my.level * .5),
				spellVariance: .95,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 8,
				cannotResist: true,
				description: config => 'Strike your target for '+ config.damageString +' arcane damage. Drain all damage to yourself as health.',
			}, {
				name: 'Lich Form',
				img: 'WLK-10',
				sp: level => spellValues.lichFormMana[level],
				spellDamage: level => spellValues.lichForm[level] + (my.level),
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 5,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Transform into a lich. Reduces health regeneration, but buffs your mana regeneration, armor, poison spell damage, and blood spell damage.',
			}, {
				name: 'Engulfing Darkness',
				img: 'WLK-11',
				sp: level => spellValues.engulfingDarknessMana[level],
				spellDamage: level => spellValues.engulfingDarkness[level] + (my.level),
				spellVariance: .92,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 3,
				cooldownTime: 45,
				description: config => 'Deals '+ config.damageString +' poison damage over time for '+ ng.toMinSecs(buffs.engulfingDarkness.duration) +'. Reduces threat and nullifies a back-row target\'s ranged defensive bonus against melee attacks while active.',
			}, {
				name: 'Profane Spirit',
				img: 'WLK-12',
				sp: level => spellValues.profaneSpiritMana[level],
				spellDamage: level => spellValues.profaneSpirit[level] + (my.level),
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 4,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Buff an ally\'s melee attacks with added poison damage and buff their poison resistance for '+ ng.toMinSecs(buffs.profaneSpirit.duration) +'. If your ally dies while the buff is active, a large explosion will hit all mobs with direct poison damage.',
			}, {
				name: 'Profane Spirit Explosion',
				img: 'WLK-12',
				sp: level => 0,
				spellDamage: level => spellValues.profaneSpirit[level] + (my.level),
				spellVariance: .9,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 0,
				cooldownTime: 0,
				description: config => 'On death: poison explodes and hits all targets',
			},
		],
		ENC: [
			{
				name: 'Gravity Flux',
				img: 'ENC-1',
				mp: level => spellValues.gravityFluxMana[level],
				spellDamage: level => spellValues.gravityFlux[level] + (my.level),
				spellVariance: .92,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Strike your target dealing '+ config.damageString +' arcane damage. Receives bonus damage based on target\'s weight.',
			}, {
				name: 'Static Suffocation',
				img: 'ENC-2',
				mp: level => spellValues.staticSuffocationMana[level],
				spellDamage: level => spellValues.staticSuffocation[level] + (my.level),
				spellVariance: .94,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 4,
				cooldownTime: 0,
				staggers: true,
				description: config => 'Suffocate your target dealing '+ config.damageString +' lightning damage over time for '+ ng.toMinSecs(buffs.staticSuffocation.duration) +'.',
			}, {
				name: 'Mind Blitz',
				img: 'ENC-3',
				mp: level => spellValues.mindBlitzMana[level],
				spellDamage: level => spellValues.mindBlitz[level] + (my.level),
				spellVariance: .89,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 2.5,
				cooldownTime: 0,
				description: config => 'Strike your target dealing '+ config.damageString +' lightning damage. Bebuffs your target with Debased Mind, which reduces arcane resistance by '+ ng.toPercent(buffs.mindBlitzEffect.reduceArcaneResist) +'% for '+ ng.toMinSecs(buffs.mindBlitzEffect.duration) +'.',
			}, {
				name: 'Subversion',
				img: 'ENC-4',
				mp: level => spellValues.subversionMana[level],
				spellDamage: level => spellValues.subversion[level] + (my.level * .5),
				spellVariance: .94,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 4,
				cooldownTime: 0,
				description: config => 'Subversive thoughts poison up to three targets dealing '+ config.damageString +' poison damage over '+ ng.toMinSecs(buffs.subversion.duration) +'.',
			}, {
				name: 'Color Shift',
				img: 'ENC-5',
				mp: level => spellValues.colorShiftMana[level],
				spellDamage: level => spellValues.colorShift[level] + (my.level * .5),
				spellVariance: .8,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2,
				cooldownTime: 30,
				description: config => 'Blast all targets with a nova dealing '+ config.damageString +' arcane damage. Reduces hate and stuns all targets for '+ ng.toMinSecs(buffs.colorShift.stunDuration) +'.',
			}, {
				name: 'Phase Blade',
				img: 'ENC-6',
				mp: level => spellValues.phaseBladeMana[level],
				spellDamage: level => spellValues.phaseBlade[level] + (my.level * .5),
				spellVariance: 1,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 3,
				cooldownTime: 180,
				isBuff: true,
				description: config => 'Buff your target with crackling energy that buffs their lightning resistance and adds lightning damage to all melee attacks.',
			}, {
				name: 'Stasis Field',
				img: 'ENC-7',
				mp: level => spellValues.stasisFieldMana[level],
				spellDamage: level => spellValues.stasisField[level] + (my.level),
				spellVariance: 1,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 60,
				isBuff: true,
				description: config => 'Seal your target in a stasis field. All damage from and to your target is heavily reduced for '+ ng.toMinSecs(buffs.stasisField.duration) +'.',
			}, {
				name: 'Shifting Ether',
				img: 'ENC-8',
				mp: level => spellValues.shiftingEtherMana[level],
				spellDamage: level => spellValues.shiftingEther[level] + (my.level),
				spellVariance: .95,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4,
				cooldownTime: 0,
				description: config => 'Tangle your target in strands of ether that deal '+ config.damageString +' arcane damage over time for '+ ng.toMinSecs(buffs.shiftingEther.duration) +'. Slows your target\'s attack speed by '+ ng.toPercent(buffs.shiftingEther.slowPercent) +'%.',
			}, {
				name: 'Serene Sigil',
				img: 'ENC-9',
				sp: level => spellValues.sereneSigilMana[level],
				spellDamage: level => spellValues.sereneSigil[level] + (my.level * .5),
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4.5,
				cooldownTime: 0,
				isShield: true,
				description: config => 'Buffs you with a magical shield that absorbs '+ config.damageString +' damage. It reduces '+ config.mitigation[config.rank] +' damage per hit from all attacks until the shield is depleted. While active you are immune to spell channeling knockback.',
			}, {
				name: 'Augmentation',
				img: 'ENC-10',
				sp: level => spellValues.augmentationMana[level],
				spellDamage: level => spellValues.augmentation[level] + (my.level),
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4.5,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Buffs your target\'s agility, dexterity, and skill haste for '+ ng.toMinSecs(buffs.augmentation.duration) +'.',
			}, {
				name: 'Clarity',
				img: 'ENC-11',
				sp: level => spellValues.clarityMana[level],
				spellDamage: level => spellValues.clarity[level] + (my.level),
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4,
				cooldownTime: 0,
				isBuff: true,
				description: config => 'Buff your target\'s mana regeneration and intelligence for '+ ng.toMinSecs(buffs.clarity.duration) +'.',
			}, {
				name: 'Enthrall',
				img: 'ENC-12',
				sp: level => spellValues.enthrallMana[level],
				spellDamage: level => spellValues.enthrall[level] + (my.level * .5),
				spellVariance: .9,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 12,
				description: config => 'Blast three targets with pillars of light that deal '+ config.damageString +' arcane damage. Reduces threat and slows each target\'s attack speed by '+ ng.toPercent(buffs.enthrall.slowPercent) +'% while active.',
			},
		],
		TMP: [
			{
				name: 'Lava Bolt',
				img: 'TMP-1',
				mp: level => spellValues.lavaBoltMana[level],
				spellDamage: level => spellValues.lavaBolt[level] + (my.level * .5),
				spellVariance: .875,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 2.5,
				cooldownTime: 0,
				description: config => 'Blast your target dealing '+ config.damageString +' fire damage.',
			}, {
				name: 'Thunderclap',
				img: 'TMP-2',
				mp: level => spellValues.thunderclapMana[level],
				spellDamage: level => spellValues.thunderclap[level] + (my.level * .5),
				spellVariance: .8,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 4,
				cooldownTime: 4,
				description: config => 'Hits your target with three successive zaps dealing '+ config.damageString +' lightning damage.',
			}, {
				name: 'Frozen Orb',
				img: 'TMP-3',
				mp: level => spellValues.frozenOrbMana[level],
				spellDamage: level => spellValues.frozenOrb[level] + (my.level * .1),
				spellVariance: .92,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 4,
				cooldownTime: 16,
				description: config => 'An area effect spell that strikes up to five targets dealing '+ config.damageString +' cold damage at intervals.',
			}, {
				name: 'Static Storm',
				img: 'TMP-4',
				mp: level => spellValues.staticStormMana[level],
				spellDamage: level => spellValues.staticStorm[level] + (my.level),
				spellVariance: .92,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 3.5,
				cooldownTime: 0,
				staggers: true,
				description: config => 'Blast up to three targets dealing '+ config.damageString +' lightning damage. Debuffs each target\'s lightning resistance by '+ ng.toPercent(buffs.staticStormDebuff.reduceLightningResist) +'% for '+ ng.toMinSecs(buffs.staticStormDebuff.duration) +'.',
			}, {
				name: 'Fire Wall',
				img: 'TMP-5',
				mp: level => spellValues.fireWallMana[level],
				spellDamage: level => spellValues.fireWall[level] + (my.level * .1),
				spellVariance: .8,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 4.5,
				cooldownTime: 24,
				description: config => 'Hits all targets in a row dealing '+ config.damageString +' fire damage over time at intervals.',
			}, {
				name: 'Glacial Spike',
				img: 'TMP-6',
				mp: level => spellValues.glacialSpikeMana[level],
				spellDamage: level => spellValues.glacialSpike[level] + (my.level * .5),
				spellVariance: .88,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 4,
				cooldownTime: 30,
				description: config => 'Freeze your target for '+ buffs.glacialSpike.freezeDuration +' seconds and inflict '+ config.damageString +' cold damage. Splash damage hits nearby targets for half damage and chills them for '+ buffs.glacialSpike.chillDuration +' seconds.',
			}, {
				name: 'Primordial Sludge',
				img: 'TMP-7',
				sp: level => spellValues.primordialSludgeMana[level],
				spellDamage: level => spellValues.primordialSludge[level] + (my.level),
				spellVariance: .91,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.POISON,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Deals '+ config.damageString +' poison damage over time for '+ buffs.primordialSludge.duration +' seconds. While active slows your target\'s attack speed.',
			}, {
				name: 'Arclight',
				img: 'TMP-8',
				sp: level => spellValues.arclightMana[level],
				spellDamage: level => spellValues.arclight[level] + (my.level),
				spellVariance: .875,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 4,
				cooldownTime: 15,
				description: config => 'Deals '+ config.damageString +' lightning damage over time for '+ buffs.arclight.duration +' seconds. Paralyzes the target for '+ buffs.arclightDebuff.duration +' seconds.',
			}, {
				name: 'Primeval Withering',
				img: 'TMP-9',
				sp: level => spellValues.primevalWitheringMana[level],
				spellDamage: level => spellValues.primevalWithering[level] + (my.level),
				spellVariance: .93,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Deals '+ config.damageString +' arcane damage over time for '+ ng.toMinSecs(buffs.primevalWithering.duration) +'. Debuffs lightning, fire, and ice resists while active.',
			}, {
				name: 'Molten Aegis',
				img: 'TMP-10',
				sp: level => spellValues.moltenAegisMana[level],
				spellDamage: level => spellValues.moltenAegis[level],
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Buffs fire resistance and adds fire damage to melee attacks for '+ ng.toMinSecs(config.duration) +'.',
			}, {
				name: 'Conviction',
				img: 'TMP-11',
				sp: level => spellValues.convictionMana[level],
				spellDamage: level => spellValues.conviction[level],
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Single target buff that boosts spirit regen and charisma for '+ ng.toMinSecs(config.duration) +'.',
			}, {
				name: 'Celestial Frenzy',
				img: 'TMP-12',
				sp: level => spellValues.celestialFrenzyMana[level],
				spellDamage: level => spellValues.celestialFrenzy[level] + (my.level),
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 4,
				cooldownTime: 0,
				description: config => 'Buffs target\'s casting speed and all spell power for '+ ng.toMinSecs(config.duration) +'.',
			},
		],
		WIZ: [
			{
				name: 'Fire Bolt',
				img: 'WIZ-1',
				mp: level => spellValues.fireBoltMana[level],
				spellDamage: level => spellValues.fireBolt[level] + (my.level),
				spellVariance: .875,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Blast your target dealing '+ config.damageString +' fire damage.',
			}, {
				name: 'Ice Bolt',
				img: 'WIZ-2',
				mp: level => spellValues.iceBoltMana[level],
				spellDamage: level => spellValues.iceBolt[level] + (my.level * .5),
				spellVariance: .9,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 2.5,
				cooldownTime: 0,
				description: config => 'Blast your target dealing '+ config.damageString +' ice damage. Reduces threat and chills your target for '+ ng.toMinSecs(buffs.iceBolt.chillDuration) +'.',
			}, {
				name: 'Lightning Bolt',
				img: 'WIZ-3',
				mp: level => spellValues.lightningBoltMana[level],
				spellDamage: level => spellValues.lightningBolt[level] + (my.level),
				spellVariance: .7,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 3.5,
				cooldownTime: 0,
				description: config => 'Strike your target dealing '+ config.damageString +' lightning damage.',
			}, {
				name: 'Magic Missiles',
				img: 'WIZ-4',
				mp: level => spellValues.magicMissilesMana[level],
				spellDamage: level => spellValues.magicMissiles[level] + (my.level * .5),
				spellVariance: .85,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 3,
				cooldownTime: 0,
				description: config => 'Strike your target with three staggered bolts that deal '+ config.damageString +' arcane damage.',
			}, {
				name: 'Fireball',
				img: 'WIZ-5',
				mp: level => spellValues.fireballMana[level],
				spellDamage: level => spellValues.fireball[level] + (my.level * 1),
				spellVariance: .88,
				spellType: PROP.EVOCATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 4,
				cooldownTime: 10,
				description: config => 'Explodes and hits up to three targets dealing '+ config.damageString +' fire damage.',
			}, {
				name: 'Chain Lightning',
				img: 'WIZ-6',
				mp: level => spellValues.chainLightningMana[level],
				spellDamage: level => spellValues.chainLightning[level] + (my.level * 1),
				spellVariance: .825,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.LIGHTNING,
				castTime: 3.5,
				cooldownTime: 12,
				description: config => 'A lightning bolt crackles through a row to your target dealing '+ config.damageString +' lightning damage.',
			}, {
				name: 'Frost Nova',
				img: 'WIZ-7',
				mp: level => spellValues.frostNovaMana[level],
				spellDamage: level => spellValues.frostNova[level] + (my.level * .5),
				spellVariance: .7,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 2,
				cooldownTime: 30,
				description: config => 'Hits all targets with a chilling nova that inflicts '+ config.damageString +' ice damage and reduces threat.',
			}, {
				name: 'Meteor',
				img: 'WIZ-8',
				mp: level => spellValues.meteorMana[level],
				spellDamage: level => spellValues.meteor[level] + (my.level * 2),
				spellVariance: .9,
				spellType: PROP.CONJURATION,
				damageType: DAMAGE_TYPE.FIRE,
				castTime: 5,
				cooldownTime: 45,
				description: config => 'Hits up to five targets dealing '+ config.damageString +' fire damage. Burning flames in the meteor\'s wake cause additional direct fire damage at intervals over '+ ng.toMinSecs(buffs.meteorStrike.duration) +'.',
			}, {
				name: 'Frozen Barrier',
				img: 'WIZ-9',
				sp: level => spellValues.frozenBarrierMana[level],
				spellDamage: level => spellValues.frozenBarrier[level] + (my.level * 1),
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 1.5,
				cooldownTime: 90,
				description: config => 'Protect yourself in a frozen barrier that makes you invincible for '+ ng.toMinSecs(config.duration) +'. Recover health and mana at intervals until the effect fades.',
			}, {
				name: 'Mirror Image',
				img: 'WIZ-10',
				sp: level => spellValues.mirrorImageMana[level],
				spellDamage: level => spellValues.mirrorImage[level] + (my.level * .5),
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 2.5,
				cooldownTime: 60,
				description: config => 'Summon an illusion that protects you and adds up to '+ config.damageString +' damage to all magic spells. The illusion\'s health determines how much damage is added to your magic. All damage absorbed weakens its health, but protects you from harm.',
			}, {
				name: 'Mana Shell',
				img: 'WIZ-11',
				sp: level => spellValues.manaShellMana[level],
				spellDamage: level => spellValues.manaShell[level],
				spellVariance: 1,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ARCANE,
				castTime: 5,
				cooldownTime: 0,
				description: config => 'Buffs all spell resistances, your silence resistance, and your ability to channel spells successfully.',
			}, {
				name: 'Deep Freeze',
				img: 'WIZ-12',
				sp: level => spellValues.deepFreezeMana[level],
				spellDamage: level => spellValues.deepFreeze[level] + my.level * 1,
				spellVariance: .875,
				spellType: PROP.ALTERATION,
				damageType: DAMAGE_TYPE.ICE,
				castTime: 3,
				cooldownTime: 30,
				description: config => 'Strike your target dealing '+ config.damageString +' ice damage that reduces threat and freezes your target for '+ ng.toMinSecs(config.freezeDuration) +'.',
			},
		],
		lastData: {},
		roman: ['I', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X'],
		oneHandSlash: {
			WAR: { max: 200, level: 1 },
			CRU: { max: 200, level: 1, },
			SHD: { max: 200, level: 1, },
			MNK: { max: 0, level: 0, },
			ROG: { max: 240, level: 1, },
			RNG: { max: 250, level: 1, },
			BRD: { max: 200, level: 1, },
			CLR: { max: 0, level: 0, },
			DRU: { max: 200, level: 1, },
			SHM: { max: 0, level: 0, },
			WLK: { max: 0, level: 0, },
			ENC: { max: 0, level: 0, },
			TMP: { max: 0, level: 0, },
			WIZ: { max: 0, level: 0, },
		},
		twoHandSlash: {
			WAR: { max: 200, level: 1 },
			CRU: { max: 200, level: 1, },
			SHD: { max: 200, level: 1, },
			MNK: { max: 0, level: 0, },
			ROG: { max: 0, level: 0, },
			RNG: { max: 225, level: 1, },
			BRD: { max: 0, level: 0, },
			CLR: { max: 0, level: 0, },
			DRU: { max: 0, level: 0, },
			SHM: { max: 0, level: 0, },
			WLK: { max: 0, level: 0, },
			ENC: { max: 0, level: 0, },
			TMP: { max: 0, level: 0, },
			WIZ: { max: 0, level: 0, },
		},
		oneHandBlunt: {
			WAR: { max: 200, level: 1 },
			CRU: { max: 200, level: 1, },
			SHD: { max: 200, level: 1, },
			MNK: { max: 250, level: 1, },
			ROG: { max: 225, level: 1, },
			RNG: { max: 240, level: 1, },
			BRD: { max: 200, level: 1, },
			CLR: { max: 200, level: 1, },
			DRU: { max: 200, level: 1, },
			SHM: { max: 200, level: 1, },
			WLK: { max: 200, level: 1, },
			ENC: { max: 200, level: 1, },
			TMP: { max: 200, level: 1, },
			WIZ: { max: 200, level: 1, },
		},
		twoHandBlunt: {
			WAR: { max: 200, level: 1 },
			CRU: { max: 200, level: 1, },
			SHD: { max: 200, level: 1, },
			MNK: { max: 250, level: 1, },
			ROG: { max: 225, level: 1, },
			RNG: { max: 240, level: 1, },
			BRD: { max: 200, level: 1, },
			CLR: { max: 200, level: 1, },
			DRU: { max: 200, level: 1, },
			SHM: { max: 200, level: 1, },
			WLK: { max: 200, level: 1, },
			ENC: { max: 200, level: 1, },
			TMP: { max: 200, level: 1, },
			WIZ: { max: 200, level: 1, },
		},
		piercing: {
			WAR: { max: 200, level: 1 },
			CRU: { max: 0, level: 0, },
			SHD: { max: 0, level: 0, },
			MNK: { max: 0, level: 0, },
			ROG: { max: 250, level: 1, },
			RNG: { max: 240, level: 1, },
			BRD: { max: 200, level: 1, },
			CLR: { max: 0, level: 0, },
			DRU: { max: 0, level: 0, },
			SHM: { max: 200, level: 1, },
			WLK: { max: 200, level: 1, },
			ENC: { max: 200, level: 1, },
			TMP: { max: 200, level: 1, },
			WIZ: { max: 200, level: 1, },
		},
		handToHand: {
			WAR: { max: 100, level: 1 },
			CRU: { max: 100, level: 1, },
			SHD: { max: 100, level: 1, },
			MNK: { max: 250, level: 1, },
			ROG: { max: 100, level: 1, },
			RNG: { max: 100, level: 1, },
			BRD: { max: 100, level: 1, },
			CLR: { max: 50, level: 1, },
			DRU: { max: 50, level: 1, },
			SHM: { max: 50, level: 1, },
			WLK: { max: 50, level: 1, },
			ENC: { max: 50, level: 1, },
			TMP: { max: 50, level: 1, },
			WIZ: { max: 50, level: 1, },
		},
		archery: {
			WAR: { max: 100, level: 1 },
			CRU: { max: 100, level: 1, },
			SHD: { max: 100, level: 1, },
			MNK: { max: 0, level: 0, },
			ROG: { max: 100, level: 1, },
			RNG: { max: 250, level: 1, },
			BRD: { max: 100, level: 1, },
			CLR: { max: 0, level: 0, },
			DRU: { max: 0, level: 0, },
			SHM: { max: 0, level: 0, },
			WLK: { max: 0, level: 0, },
			ENC: { max: 0, level: 0, },
			TMP: { max: 0, level: 0, },
			WIZ: { max: 0, level: 0, },
		},
		offense: {
			WAR: { max: 200, level: 1 },
			CRU: { max: 200, level: 1, },
			SHD: { max: 250, level: 1, },
			MNK: { max: 250, level: 1, },
			ROG: { max: 250, level: 1, },
			RNG: { max: 250, level: 1, },
			BRD: { max: 200, level: 1, },
			CLR: { max: 200, level: 1, },
			DRU: { max: 200, level: 1, },
			SHM: { max: 200, level: 1, },
			WLK: { max: 150, level: 1, },
			ENC: { max: 150, level: 1, },
			TMP: { max: 150, level: 1, },
			WIZ: { max: 150, level: 1, },
		},
		defense: {
			WAR: { max: 250, level: 1 },
			CRU: { max: 250, level: 1, },
			SHD: { max: 250, level: 1, },
			MNK: { max: 200, level: 1, },
			ROG: { max: 200, level: 1, },
			RNG: { max: 200, level: 1, },
			BRD: { max: 200, level: 1, },
			CLR: { max: 200, level: 1, },
			DRU: { max: 200, level: 1, },
			SHM: { max: 200, level: 1, },
			WLK: { max: 150, level: 1, },
			ENC: { max: 150, level: 1, },
			TMP: { max: 150, level: 1, },
			WIZ: { max: 150, level: 1, },
		},
		dodge: {
			WAR: { max: 150, level: 6 },
			CRU: { max: 150, level: 10, },
			SHD: { max: 150, level: 10, },
			MNK: { max: 150, level: 1, },
			ROG: { max: 200, level: 4, },
			RNG: { max: 150, level: 8, },
			BRD: { max: 200, level: 10, },
			CLR: { max: 100, level: 15, },
			DRU: { max: 100, level: 15, },
			SHM: { max: 100, level: 15, },
			WLK: { max: 100, level: 22, },
			ENC: { max: 100, level: 22, },
			TMP: { max: 100, level: 22, },
			WIZ: { max: 100, level: 22, },
		},
		parry: {
			WAR: { max: 250, level: 10 },
			CRU: { max: 250, level: 17, },
			SHD: { max: 200, level: 17, },
			MNK: { max: 150, level: 12, },
			ROG: { max: 150, level: 12, },
			RNG: { max: 200, level: 18, },
			BRD: { max: 0, level: 0, },
			CLR: { max: 0, level: 0, },
			DRU: { max: 0, level: 0, },
			SHM: { max: 0, level: 0, },
			WLK: { max: 0, level: 0, },
			ENC: { max: 0, level: 0, },
			TMP: { max: 0, level: 0, },
			WIZ: { max: 0, level: 0, },
		},
		riposte: {
			WAR: { max: 250, level: 25 },
			CRU: { max: 200, level: 30, },
			SHD: { max: 250, level: 30, },
			MNK: { max: 200, level: 35, },
			ROG: { max: 150, level: 30, },
			RNG: { max: 150, level: 35, },
			BRD: { max: 0, level: 0, },
			CLR: { max: 0, level: 0, },
			DRU: { max: 0, level: 0, },
			SHM: { max: 0, level: 0, },
			WLK: { max: 0, level: 0, },
			ENC: { max: 0, level: 0, },
			TMP: { max: 0, level: 0, },
			WIZ: { max: 0, level: 0, },
		},
		dualWield: {
			WAR: { max: 200, level: 13},
			CRU: { max: 0, level: 0, },
			SHD: { max: 0, level: 0, },
			MNK: { max: 250, level: 1, },
			ROG: { max: 250, level: 13, },
			RNG: { max: 250, level: 17, },
			BRD: { max: 200, level: 17, },
			CLR: { max: 0, level: 0, },
			DRU: { max: 0, level: 0, },
			SHM: { max: 0, level: 0, },
			WLK: { max: 0, level: 0, },
			ENC: { max: 0, level: 0, },
			TMP: { max: 0, level: 0, },
			WIZ: { max: 0, level: 0, },
		},
		doubleAttack: {
			WAR: { max: 200, level: 15 },
			CRU: { max: 250, level: 20, },
			SHD: { max: 250, level: 20, },
			MNK: { max: 250, level: 15, },
			ROG: { max: 250, level: 16, },
			RNG: { max: 250, level: 20, },
			BRD: { max: 0, level: 0, },
			CLR: { max: 0, level: 0, },
			DRU: { max: 0, level: 0, },
			SHM: { max: 0, level: 0, },
			WLK: { max: 0, level: 0, },
			ENC: { max: 0, level: 0, },
			TMP: { max: 0, level: 0, },
			WIZ: { max: 0, level: 0, },
		},
		alteration: {
			WAR: { max: 0, level: 0 },
			CRU: { max: 200, level: 1, },
			SHD: { max: 200, level: 1, },
			MNK: { max: 0, level: 0, },
			ROG: { max: 0, level: 0, },
			RNG: { max: 200, level: 1, },
			BRD: { max: 250, level: 1, },
			CLR: { max: 250, level: 1, },
			DRU: { max: 250, level: 1, },
			SHM: { max: 250, level: 1, },
			WLK: { max: 250, level: 1, },
			ENC: { max: 250, level: 1, },
			TMP: { max: 250, level: 1, },
			WIZ: { max: 250, level: 1, },
		},
		evocation: {
			WAR: { max: 0, level: 0 },
			CRU: { max: 200, level: 1, },
			SHD: { max: 200, level: 1, },
			MNK: { max: 0, level: 0, },
			ROG: { max: 0, level: 0, },
			RNG: { max: 200, level: 1, },
			BRD: { max: 250, level: 1, },
			CLR: { max: 250, level: 1, },
			DRU: { max: 250, level: 1, },
			SHM: { max: 250, level: 1, },
			WLK: { max: 250, level: 1, },
			ENC: { max: 250, level: 1, },
			TMP: { max: 250, level: 1, },
			WIZ: { max: 250, level: 1, },
		},
		conjuration: {
			WAR: { max: 0, level: 0 },
			CRU: { max: 200, level: 1, },
			SHD: { max: 200, level: 1, },
			MNK: { max: 0, level: 0, },
			ROG: { max: 0, level: 0, },
			RNG: { max: 200, level: 1, },
			BRD: { max: 250, level: 1, },
			CLR: { max: 250, level: 1, },
			DRU: { max: 250, level: 1, },
			SHM: { max: 250, level: 1, },
			WLK: { max: 250, level: 1, },
			ENC: { max: 250, level: 1, },
			TMP: { max: 250, level: 1, },
			WIZ: { max: 250, level: 1, },
		},
	}
	// [0, 1, 6, 12, 18, 24, 30, 39, 49]
	// rog: 17/13 // war: 427/428
	// shm: 23/21 // clr: 624/727 dru: 584/708
	// nec: 27/16 // wiz: 812/416
					  // [0, 4, 8, 12, 15, 18, 20, 22]
	const baseManaTier = [0, 4, 12, 24, 40, 58, 78, 100]
	function getManaTier(multiplier) {
		return baseManaTier.map(v => round(v * multiplier))
	}
	// HoT 3-4 sp/heal
	// DIRECT HEALING 2-3 spirit per heal
	// AE HEALING .5-1.25 sp/heal

	// DOT 3-5 mp/d
	// DIRECT DAMAGE 2-4 m/d
	// AE DAMAGE 1.5-3 m/d
	const spellValues = {
		// ROG
		shadowStrikeMana: getManaTier(.8),
		sonicStrikeMana: getManaTier(1),
		fadedStrikeMana: getManaTier(1.2),
		risingFurorMana: getManaTier(1.2),
		lacerateMana: getManaTier(1.4),
		backstabMana: getManaTier(1.3),
		widowStrikeMana: getManaTier(1.5),
		dazzleThrustMana: getManaTier(1.5),
		mirageStrikeMana: getManaTier(.8),
		flashStrikeMana: getManaTier(1.3),
		talismanOfTreacheryMana: getManaTier(1.5),
		prowlMana: getManaTier(1.5),
		// MNK
		tigerStrikeMana: getManaTier(.8),
		hyperStrikeMana: getManaTier(1),
		mimeStrikeMana: getManaTier(1.2),
		craneKickMana: getManaTier(1.2),
		chakraBlastMana: getManaTier(1.4),
		hadokenMana: getManaTier(1.3),
		hurricaneKicksMana: getManaTier(1.2),
		dragonPunchMana: getManaTier(1.5),
		viperStrikeMana: getManaTier(.8),
		palmStrikeMana: getManaTier(1.4),
		mendingAuraMana: getManaTier(1.2),
		mendingAura: [0, 17, 35, 80, 146, 216, 270, 324],
		spiritBarrierMana: getManaTier(1.5),
		// SHD
		shadowBreakMana: getManaTier(.9),
		deathStrikeMana: getManaTier(1),
		crescentCleaveMana: getManaTier(1.1),
		doomThrustMana: getManaTier(1.3),
		astralBladeMana: getManaTier(1.5),
		astralBlade: [0, 7, 18, 42, 74, 109, 140, 164],
		ravagingPlagueMana: getManaTier(1.4),
		ravagingPlague: [0, 13, 29, 68, 117, 179, 220, 260],
		decayingDoomMana: getManaTier(1.5),
		decayingDoom: [0, 12, 27, 62, 107, 162, 200, 236],
		bloodTerrorMana: getManaTier(1.6),
		bloodTerror: [0, 30, 66, 155, 267, 407, 501, 591],
		lifeTapMana: getManaTier(1.5),
		lifeTap: [0, 14, 35, 85, 151, 222, 287, 334],
		vampiricFeastMana: getManaTier(1.8),
		vampiricFeast: [0, 6, 13, 31, 53, 81, 100, 118],
		sanguineHarvestMana: getManaTier(1.4),
		sanguineHarvest: AllZeroes,
		markOfRemphanMana: getManaTier(1.4),
		markOfRemphan: [0, 21, 47, 109, 189, 287, 354, 418],
		// CRU
		zealousSlamMana: getManaTier(.8),
		rebukeMana: getManaTier(1.2),
		vengeanceMana: getManaTier(.8),
		consecrateMana: getManaTier(1),
		sealOfDamnationMana: getManaTier(1.4),
		sealOfDamnation: [0, 20, 44, 103, 178, 271, 334, 394],
		holyWrathMana: getManaTier(1.5),
		holyWrath: [0, 23, 52, 122, 211, 320, 395, 465],
		divineJudgmentMana: getManaTier(1.6),
		divineJudgment: [0, 30, 66, 155, 267, 406, 502, 591],
		blessedHammerMana: getManaTier(1.5),
		blessedHammer: [0, 16, 42, 99, 176, 261, 337, 392],
		sealOfSanctuaryMana: getManaTier(1.5),
		sealOfSanctuary: AllZeroes,
		divineGraceMana: getManaTier(1.5),
		divineGrace: [0, 23, 47, 106, 193, 286, 356, 428],
		benevolenceMana: getManaTier(2.2),
		benevolence: [0, 16, 37, 90, 163, 243, 312, 363],
		jubileeMana: getManaTier(1.4),
		jubilee: [0, 16, 35, 82, 142, 217, 267, 315],
		// BRD
		bellowMana: getManaTier(1),
		bellow: [0, 15, 38, 91, 163, 240, 310, 362],
		sonicBoomMana: getManaTier(1.5),
		sonicBoom: [0, 13, 32, 78, 139, 206, 265, 310],
		euphonicDirgeMana: getManaTier(1),
		euphonicDirge: [0, 11, 28, 67, 119, 176, 227, 265],
		subvertedSymphonyMana: getManaTier(1.2),
		subvertedSymphony: [0, 15, 39, 92, 164, 243, 313, 366],
		crashingChordsMana: getManaTier(1.4),
		crashingChords: [0, 20, 50, 121, 217, 320, 413, 482],
		battleHymnMana: getManaTier(.3),
		battleHymn: AllZeroes,
		militantCadenceMana: getManaTier(.3),
		militantCadence: AllZeroes,
		consonantChainMana: getManaTier(1.5),
		consonantChain: [0, 26, 63, 152, 272, 401, 516, 603],
		litanyOfLifeMana: getManaTier(.3),
		litanyOfLife: AllZeroes,
		melodyOfManaMana: getManaTier(.3),
		melodyOfMana: AllZeroes,
		righteousRhapsodyMana: getManaTier(.3),
		righteousRhapsody: AllZeroes,
		chromaticSonataMana: getManaTier(.3),
		chromaticSonata: AllZeroes,
		// TMP
		lavaBoltMana: getManaTier(1),
		lavaBolt: [0, 15, 40, 94, 168, 249, 320, 374],
		thunderclapMana: getManaTier(1.3),
		thunderclap: [0, 6, 14, 34, 61, 90, 116, 136],
		frozenOrbMana: getManaTier(1.5),
		frozenOrb: [0, 5, 13, 30, 54, 79, 102, 119],
		staticStormMana: getManaTier(1.4),
		staticStorm: [0, 17, 43, 102, 184, 271, 349, 408],
		fireWallMana: getManaTier(1.5),
		fireWall: [0, 2, 5, 13, 23, 34, 44, 51],
		glacialSpikeMana: getManaTier(1.7),
		glacialSpike: [0, 21, 55, 130, 234, 346, 445, 520],
		primordialSludgeMana: getManaTier(1.8),
		primordialSludge: [0, 29, 76, 179, 321, 475, 611, 714],
		arclightMana: getManaTier(1.5),
		arclight: [0, 22, 58, 136, 245, 362, 466, 544],
		primevalWitheringMana: getManaTier(1.6),
		primevalWithering: [0, 28, 72, 170, 306, 452, 582, 680],
		moltenAegisMana: getManaTier(1.4),
		moltenAegis: AllZeroes,
		convictionMana: getManaTier(1.6),
		conviction: AllZeroes,
		celestialFrenzyMana: getManaTier(2),
		celestialFrenzy: AllZeroes,
		// ENC
		gravityFluxMana: getManaTier(1.2),
		gravityFlux: [0, 14, 36, 85, 153, 226, 291, 340],
		staticSuffocationMana: getManaTier(1.5),
		staticSuffocation: [0, 13, 33, 78, 140, 207, 267, 312],
		mindBlitzMana: getManaTier(1.5),
		mindBlitz: [0, 23, 57, 136, 243, 360, 464, 542],
		subversionMana: getManaTier(1.8),
		subversion: [0, 19, 46, 111, 199, 294, 379, 443],
		colorShiftMana: getManaTier(1.5),
		colorShift: [0, 9, 22, 53, 95, 141, 182, 212],
		phaseBladeMana: getManaTier(1.0),
		phaseBlade: AllZeroes,
		stasisFieldMana: getManaTier(1.7),
		stasisField: AllZeroes,
		shiftingEtherMana: getManaTier(1.7),
		shiftingEther: [0, 29, 72, 173, 308, 456, 588, 687],
		sereneSigilMana: getManaTier(1.6),
		sereneSigil: [0, 50, 101, 228, 413, 612, 762, 917],
		augmentationMana: getManaTier(1.8),
		augmentation: AllZeroes,
		clarityMana: getManaTier(1.4),
		clarity: AllZeroes,
		enthrallMana: getManaTier(1.6),
		enthrall: [0, 20, 50, 117, 210, 311, 401, 468],
		// WLK
		venomBoltMana: getManaTier(1.2),
		venomBolt: [0, 15, 37, 89, 159, 235, 303, 354],
		explosivePlagueMana: getManaTier(1.6),
		explosivePlague: [0, 28, 68, 164, 293, 433, 558, 651],
		bloodFireMana: getManaTier(1.5),
		bloodFire: [0, 15, 38, 90, 161, 238, 306, 358],
		demonicPactMana: getManaTier(1.6),
		demonicPact: [0, 17, 41, 98, 176, 260, 334, 390],
		hauntingVisionMana: getManaTier(1.2),
		hauntingVision: [0, 18, 44, 107, 191, 282, 364, 425],
		icingDeathMana: getManaTier(1.6),
		icingDeath: [0, 17, 41, 98, 175, 259, 333, 389],
		curseOfShadowsMana: getManaTier(1.4),
		curseOfShadows: [0, 26, 63, 151, 270, 400, 515, 602],
		panicStrikeMana: getManaTier(1.4),
		panicStrike: [0, 18, 45, 107, 191, 282, 364, 425],
		drainSoulMana: getManaTier(1.2),
		drainSoul: [0, 13, 32, 77, 137, 202, 261, 304],
		lichFormMana: getManaTier(2.4),
		lichForm: AllZeroes,
		engulfingDarknessMana: getManaTier(1.7),
		engulfingDarkness: [0, 26, 65, 156, 278, 411, 530, 620],
		profaneSpiritMana: getManaTier(1.4),
		profaneSpirit: [0, 32, 78, 187, 334, 494, 636, 743],
		// SHM
		frostRiftMana: getManaTier(1.2),
		frostRift: [0, 15, 37, 89, 159, 235, 303, 354],
		poisonNovaMana: getManaTier(1.4),
		poisonNova: [0, 14, 34, 81, 146, 215, 277, 323],
		scourgeMana: getManaTier(1.3),
		scourge: [0, 14, 34, 81, 145, 214, 275, 322],
		poisonBoltMana: getManaTier(1.5),
		poisonBolt: [0, 24, 59, 141, 253, 374, 482, 563],
		vampiricGazeMana: getManaTier(1.8),
		vampiricGaze: [0, 26, 64, 155, 277, 409, 526, 615],
		glacialShardMana: getManaTier(1.6),
		glacialShard: [0, 16, 40, 97, 174, 256, 330, 386],
		afflictionMana: getManaTier(1.8),
		affliction: [0, 34, 84, 202, 362, 534, 688, 804],
		devouringSwarmMana: getManaTier(2.2),
		devouringSwarm: [0, 27, 67, 162, 290, 427, 550, 643],
		rejuvinateMana: getManaTier(1.7),
		rejuvinate: [0, 19, 41, 100, 182, 269, 345, 403],
		mysticalGlowMana: getManaTier(1.4),
		mysticalGlow: [0, 17, 37, 89, 162, 240, 308, 360],
		vampiricAllureMana: getManaTier(1.6),
		vampiricAllure: AllZeroes,
		borealTalismanMana: getManaTier(1.8),
		borealTalisman: AllZeroes,
		// DRU
		starfireMana: getManaTier(1.1),
		starfire: [0, 17, 42, 101, 181, 267, 344, 402],
		fissureMana: getManaTier(1.2),
		fissure: [0, 3, 8, 19, 35, 51, 66, 77],
		lightningBlastMana: getManaTier(1.1),
		lightningBlast: [0, 13, 33, 78, 140, 207, 267, 311],
		blizzardMana: getManaTier(1.5),
		blizzard: [0, 2, 6, 15, 28, 41, 53, 62],
		toxicSporesMana: getManaTier(1.6),
		toxicSpores: [0, 26, 64, 154, 275, 406, 525, 611],
		moltenBoulderMana: getManaTier(1.7),
		moltenBoulder: [0, 24, 60, 143, 257, 379, 488, 570],
		barbedThicketMana: getManaTier(1.4),
		barbedThicket: [0, 10, 26, 62, 112, 166, 214, 249],
		tornadoMana: getManaTier(2),
		tornado: [0, 18, 45, 108, 194, 286, 369, 430],
		naturesTouchMana: getManaTier(1.5),
		naturesTouch: [0, 13, 34, 80, 144, 214, 276, 320],
		mossBreathMana: getManaTier(1.2),
		mossBreath: [0, 19, 41, 100, 182, 269, 345, 403],
		synthesizeMana: getManaTier(2.5),
		synthesize: [0, 66, 144, 354, 642, 948, 1218, 1422],
		branchSpiritMana: getManaTier(1.6),
		branchSpirit: [0, 11, 24, 59, 107, 158, 203, 237],
		// WIZ
		fireBoltMana: getManaTier(1.1),
		fireBolt: [0, 20, 50, 120, 215, 318, 410, 478],
		iceBoltMana: getManaTier(1.2),
		iceBolt: [0, 13, 32, 77, 138, 203, 262, 306],
		lightningBoltMana: getManaTier(1.1),
		lightningBolt: [0, 26, 65, 156, 279, 413, 533, 621],
		magicMissilesMana: getManaTier(1.3),
		magicMissiles: [0, 6, 17, 40, 73, 108, 139, 162],
		fireballMana: getManaTier(1.4),
		fireball: [0, 16, 40, 96, 172, 254, 328, 382],
		chainLightningMana: getManaTier(1.4),
		chainLightning: [0, 14, 35, 84, 151, 223, 287, 335],
		frostNovaMana: getManaTier(1.6),
		frostNova: [0, 10, 25, 60, 108, 159, 205, 239],
		meteorMana: getManaTier(2),
		meteor: [0, 36, 90, 216, 387, 572, 738, 860],
		frozenBarrierMana: getManaTier(1.5),
		frozenBarrier: [0, 16, 40, 96, 172, 254, 328, 382],
		mirrorImageMana: getManaTier(1.2),
		mirrorImage: [0, 10, 25, 60, 108, 159, 205, 239],
		manaShellMana: getManaTier(.8),
		manaShell: [0,1,2,3,4,5,6,7],
		deepFreezeMana: getManaTier(1.6),
		deepFreeze: [0, 26, 65, 156, 280, 413, 533, 621],
		// WAR
		shieldBashMana: getManaTier(.5),
		ruptureMana: getManaTier(.9),
		whirlwindMana: getManaTier(1.3),
		pummelMana: getManaTier(.7),
		doubleThrowMana: getManaTier(.8),
		shockwaveMana: getManaTier(1.2),
		frenzyMana: getManaTier(1.15),
		jumpStrikeMana: getManaTier(1.4),
		primalStompMana: getManaTier(1.1),
		bulwarkMana: getManaTier(1.35),
		intrepidShoutMana: getManaTier(1.65),
		furiousCleaveMana: getManaTier(1.4),
		// CLR
		smiteMana: getManaTier(1.2),
		smite: [0, 18, 44, 105, 187, 277, 357, 416],
		deliveranceMana: getManaTier(1),
		deliverance: [0, 14, 33, 76, 140, 220, 284, 328],
		condemnationMana: getManaTier(1.6),
		condemnation: [0, 16, 39, 88, 154, 225, 291, 341],
		sacredRevelationMana: getManaTier(1.4),
		sacredRevelation: [0, 10, 24, 54, 96, 141, 181, 211],
		holySanctuaryMana: getManaTier(.9),
		holySanctuary: [0, 9, 22, 52, 93, 138, 178, 208],
		forceOfGloryMana: getManaTier(1.3),
		forceOfGlory: [0, 20, 45, 111, 196, 288, 348, 415],
		bindingGraceMana: getManaTier(2.5),
		bindingGrace: [0, 21, 46, 102, 189, 277, 352, 409],
		guardianAngelMana: getManaTier(1.6),
		guardianAngel: [0, 20, 42, 97, 180, 262, 335, 390],
		divineLightMana: getManaTier(1.6),
		divineLight: [0, 24, 54, 123, 228, 336, 426, 495],
		circleOfPrayerMana: getManaTier(2.6),
		circleOfPrayer: [0, 14, 32, 78, 142, 211, 271, 316],
		sealOfRedemptionMana: getManaTier(3.5),
		sealOfRedemption: [0, 16, 38, 93, 170, 253, 325, 379],
		zealousResolveMana: getManaTier(2.9),
		zealousResolve: [0, 10, 24, 60, 110, 164, 211, 246],
		// RNG
		crossSlashMana: getManaTier(.5),
		explosiveShotMana: getManaTier(.8),
		trueshotStrikeMana: getManaTier(1.2),
		spreadShotMana: getManaTier(.8),
		bladeStormMana: getManaTier(1),
		suppressingVolleyMana: getManaTier(1.3),
		burningEmbersMana: getManaTier(1.1),
		burningEmbers: [0, 15, 37, 88, 156, 231, 298, 347],
		shockNovaMana: getManaTier(1.3),
		shockNova: [0, 9, 20, 47, 81, 123, 152, 179],
		faerieFlameMana: getManaTier(1.6),
		faerieFlame: [0, 19, 49, 117, 207, 307, 396, 461],
		fungalGrowthMana: getManaTier(1.2),
		fungalGrowth: [0, 21, 42, 95, 172, 255, 318, 382],
		shimmeringOrbMana: getManaTier(1.7),
		shimmeringOrb: [0, 33, 67, 152, 275, 408, 508, 611],
		spiritOfTheHunterMana: getManaTier(2.5),
		spiritOfTheHunter: [0, 4, 8, 13, 19, 26, 34, 45],
	}

	///////////////////////////////////////////
	function init() {
		skills.skillNames = getClassKeys()
		Object.keys(ng.jobLong).forEach((job) => {
			skills[job].forEach((skill, index) => {
				skills[job][index].index = index
			})
		})
	}
	function getName(prop) {
		return (item.specialPropLabels[prop] || _.capitalize(prop))
	}
	function getClassKeys() {
		return skills[my.job].map(o => o.name)
	}
	function getDefaults(skillIndex, data) {
		return {
			mpCost: typeof data.mp === 'function' ? data.mp(my.skills[skillIndex]) : 0,
			spCost: typeof data.sp === 'function' ? data.sp(my.skills[skillIndex]) : 0,
			name: data.name,
			skillIndex: skillIndex,
			global: true,
			isMob: true,
		}
	}
	function cannotCast() {
		return my.buffFlags.silenced ||
			my.buffFlags.frozenBarrier
	}
	function notReady(config, skillData = {}) {
		if (timers.castBar < 1 ||
			(config.global && timers.globalCooldown < 1) ||
			(config.skillIndex >= 0 && timers.skillCooldowns[config.skillIndex] < 1) ||
			my.skills[config.skillIndex] === 0) return true

		// console.info('notReady', config)
		// some active spells disable casting

		// STUN
		if (my.isStunned()) {
			my.stunMsg()
			return true
		}
		// SILENCE
		if (tooltip.isSpell(skillData) &&
			my.isSilenced()) {
			my.silenceMsg()
			return true
		}
		// console.info('config', config, skillData)
		// PARALYZE
		if (tooltip.isRangedOrMelee(skillData) &&
			my.paralyzeCheckRoll()) {
			my.paralyzeMsg()
			button.triggerGlobalCooldown()
			return true
		}
		// targeting
		if (config.anyTarget) {
			// A OK
		}
		else {
			if (config.isMob) {
				if (!my.targetIsMob) {
					chat.log('You must target a mob with this skill.', CHAT.WARNING)
					return true
				}
			}
			else {
				if (my.targetIsMob) {
					chat.log('You must target a player with this skill.', CHAT.WARNING)
					return true
				}
				if (config.targetOther && my.target === my.row) {
					chat.log('You must target a party member with this skill.', CHAT.WARNING)
					return true
				}
			}
			if (config.fixTarget) {
				if (config.isMob) my.fixTarget()
				else {
					my.partyTarget(0)
				}
				if (my.target === -1) {
					chat.log('There are no valid targets for this skill.', CHAT.WARNING)
					return true
				}
			}
			if (my.target === -1) {
				chat.log('You must select a target to use this skill.', CHAT.WARNING)
				return true
			}
		}

		if (!config.oocEnabled &&
			ng.view !== 'battle') {
			chat.log('You cannot use this skill out of combat.', CHAT.WARNING)
			return true
		}
		if (config.requiresFrontRow && my.target > 4) {
			chat.log('This skill can only target the front row!', CHAT.WARNING)
			return true
		}
		if (config.mpCost) {
			if (config.mpCost > my.mp) {
				chat.log('Not enough mana for ' + config.name + '!', CHAT.WARNING)
				return true
			}
		}
		if (config.spCost) {
			if (config.spCost > my.sp) {
				chat.log('Not enough spirit for ' + config.name + '!', CHAT.WARNING)
				return true
			}
		}
		// SUCCESS: set last data used for spell completed reference
		skills.lastData = skillData
		return false
	}

	function getSkillValues(start, increment) {
		skillValues = [0, start]
		for (lvl=2; lvl<=MaxSkillLevel; lvl++) {
			start = +((start + increment).toFixed(2))
			skillValues.push(start)
		}
		return skillValues
	}
	function modifiedDamageString(ds, multiplier) {
		ds = ds.split('-')
		// console.info('modifiedDamageString', ds, multiplier)
		let min = _.max([1, round(+ds[0] * multiplier)])
		let max = _.max([1, round(+ds[1] * multiplier)])
		return min +'-'+ max
	}
	function enhanceHit(hit, modifier) {
		if (hit.min) hit.min *= modifier
		if (hit.max) hit.max *= modifier
		return hit
	}
}($, _, TweenMax, Object);